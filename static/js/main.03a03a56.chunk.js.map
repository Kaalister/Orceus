{"version":3,"sources":["Profile.js","HttpRequests.js","components/BackgroundVideo.js","assets/background/loginBackground.mp4","assets/background/successBackground.mp4","assets/background/errorBackground.mp4","components/Login.js","components/Card.js","assets/images/logoutBtn.png","assets/images/loading.gif","components/CardsMenu.js","components/Cards.js","components/AdminModale.js","components/AdminSettings.js","constants.js","components/RollingPage.js","components/Character/CharacterMenu.js","components/Character/ChararcterHeader.js","components/Character/Character.js","components/Character/Inventory.js","components/Character/CharacterData.js","components/Character/SwitchCharacters.js","App.js","reportWebVitals.js","index.js"],"names":["AppProfile","profile","connected","sessionType","get","key","this","URL_API","HttpGetRequest","route","headers","Headers","fetch","method","response","console","log","HttpPostRequest","body","JSON","stringify","HttpPutRequest","BackgroundVideo","props","className","autoPlay","loop","muted","src","source","type","vKey","Login","state","password","error","loginState","handlePassword","bind","handleSubmit","savePassword","localStorage","getItem","currentUrl","window","location","href","URL","searchParams","e","setState","target","value","pass","then","ok","Error","json","data","setItem","session_type","setTimeout","history","push","referrer","catch","removeItem","isMobile","innerWidth","inputClass","loginBackground","successBackground","errorBackground","join","TextField","onChange","placeholder","style","marginRight","Button","variant","onClick","React","Component","CardMenu","card","infoImg","scale","translation","x","y","getCard","reset","zoomIn","zoomOut","id","zoom","height","width","big_card","alt","to","ArrowBack","ZoomOutMap","Add","Remove","TYPESOPTIONS","label","SPECIESOPTIONS","cards","loading","filters","search","specie","tags","timer","refFilters","createRef","getCardList","logout","handleFilters","length","clearTimeout","form","current","getFieldsValue","filter","toLowerCase","i","layout","fields","name","onFieldsChange","justify","ref","Item","options","allowClear","hidden","mode","showArrow","open","minWidth","maxWidth","map","cardItem","index","overflow","logoutBtn","position","top","left","cursor","displayFilters","Face","color","Casino","Settings","Cards","match","useRouteMatch","path","GetIDToCard","useParams","THEMESELECT","provided","singleValue","menu","backgroundColor","control","background","option","AdminModale","closing","desc","card_num","close","changeText","handleSelect","handleTags","removeTag","addTag","handleImg","submit","input","document","getElementById","click","addEventListener","file","files","formData","FormData","append","link","splice","update","classModale","title","submitText","cardImage","bigCardImage","cardContainerClass","bigCardContainerClass","show","Close","getValueFromOptions","styles","accept","textAlign","AddCircleOutline","tag","Delete","disabled","AdminSettings","selectedCard","openModal","closeModal","notification","message","description","placement","boxShadow","backdropFilter","WebkitBackdropFilter","unauthorized","HttpDeleteRequest","columns","headerName","field","renderCell","params","obj","lenth","species","flex","sortable","Create","configureCard","row","deleteCard","ArrowBackIos","startIcon","rows","pageSize","autoHeight","PLANTS_ABYSS","stage","max","min","ROCKS_ABYSS","in","notIn","RollingPage","number","zone","foundedItems","types","zones","refForm","submitForm","makeASearch","Math","floor","random","foundedItem","findPlants","findRocks","makeRapport","items","listItems","Set","result","count","item","plants","plant","dice","rollDice","plantFind","find","rocks","rock","includes","rockFind","parseInt","initialValues","listStyleType","CharacterMenu","characters","addNewCharacter","disableColumnSelector","firstname","lastname","disableColumnFilter","disableColumnMenu","Book","components","ColumnMenu","hideMenu","currentColumn","column","rowsPerPageOptions","CharacterHeader","Save","saveCharacter","Backpack","TextArea","Input","CHAR_BASE","shashouille","pilleur","att","def","vit","agi","puiss","stren","artificier","nomade","artisan","medecin","illumine","ciheuphe","dresseur","chasseur","danseur","herboriste","erudit","humain","chevalier","tireur","barde","createur","robot","assassin","soigneur","protecteur","suhera","sorciere","angeliste","distordeur","hanylice","tele_kinesiste","controleur","RACESTYPES","JOBS","NAMEPUISS","Character","modalIsOpen","selectedSkill","modifiedSkill","character","equipment","weapon","plastron","shield","helmet","glove","shoe","topClothes","botClothes","amulet","other","fight","cac","dist","mag","def_phy","def_mag","dodge","hp_max","hp","image","job","level","stats","char","luck","obs","prec","pui","know","years_old","config","puissName","lore","notes","inventory","skills","newForm","changeCharacterInfo","changeCharacterStats","changeCharacterFight","setImageCharacter","removeImageCharacter","addSkill","selectSkill","changeSkill","deleteSkill","validateSkillModification","renderSkills","renderEquipment","renderEquiped","actualizeFightStats","statsFightChange","base","round","sqrt","pow","actualizeCharacter","reader","FileReader","onload","readAsDataURL","fileList","originFileObj","part","equipedPartIDs","resetFields","skill","uuid","forEach","defaultValue","CloseCircleOutlined","CheckCircleOutlined","autoSize","minRows","maxRows","EditOutlined","DeleteOutlined","readOnly","carac","MinusCircleOutlined","unequipItem","nb","notFoundContent","val","showSearch","searchValue","jobSearch","onSearch","changeSearchValue","onInputKeyDown","action","itemRender","showUploadList","CloseOutlined","PlusCircleOutlined","visible","onOk","onCancel","labelCol","span","wrapperCol","labelAlign","onFinish","addItem","rules","required","content","TYPES","Inventory","onChangeItem","property","findIndex","onChangeNewItem","newItem","a","b","objectA","objectB","labelA","labelB","localeCompare","screen","isTablet","dataIndex","defaultSortOrder","sorter","render","bordered","sortByType","_","DeleteOutline","dataSource","CharacterData","prevProps","localisation","display","justifyContent","loadingImg","SwitchCharacters","GetCharacterId","split","pop","PrivateRoute","useHistory","component","App","SelectCharacters","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.03a03a56.chunk.js","sourcesContent":["const AppProfile = {\n    profile : {\n        connected: false,\n        sessionType: \"\"\n    },\n    get: function(key) {\n        return key in this.profile ? this.profile[key] : null;\n    }\n}\n\nexport default AppProfile;","const URL_API = \"https://kf3hmnez3b.execute-api.eu-west-3.amazonaws.com/Orceus\";\n\nexport async function HttpGetRequest(route) {\n    try {\n        let headers = new Headers ({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        });\n\n        const response = await fetch(URL_API + route, {\n            method: \"GET\",\n            headers\n        });\n        return(await response);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function HttpPostRequest(route, body) {\n    try {\n        let headers = new Headers ({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        });\n\n        const response = await fetch(URL_API + route, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify(body)\n        });\n        return(await response);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function HttpPutRequest(route, body) {\n    try {\n        let headers = new Headers ({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        });\n\n        const response = await fetch(URL_API + route, {\n            method: \"PUT\",\n            headers,\n            body: JSON.stringify(body)\n        });\n        return(await response);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function HttpDeleteRequest(route, body) {\n    try {\n        let headers = new Headers ({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        });\n\n        const response = await fetch(URL_API + route, {\n            method: \"DELETE\",\n            headers,\n            body: JSON.stringify(body)\n        });\n        return(await response);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React from 'react';\n\nexport default function BackgroundVideo({...props}) {\n    return (\n        <video key={props.vKey} className='background' autoPlay loop muted>\n            <source src={props.source} type='video/mp4' />\n        </video>\n    );\n}","export default __webpack_public_path__ + \"static/media/loginBackground.c2589e2e.mp4\";","export default __webpack_public_path__ + \"static/media/successBackground.8fe1101c.mp4\";","export default __webpack_public_path__ + \"static/media/errorBackground.a7b480f5.mp4\";","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AppProfile from '../Profile';\n\nimport { HttpPostRequest } from '../HttpRequests';\nimport BackgroundVideo from './BackgroundVideo';\n\nimport \"../assets/css/login.css\";\nimport loginBackground from '../assets/background/loginBackground.mp4';\nimport successBackground from '../assets/background/successBackground.mp4';\nimport errorBackground from '../assets/background/errorBackground.mp4';\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            password: '',\n            error: false,\n            loginState: null,\n            connected: AppProfile.get('connected'),\n        }\n\n        this.handlePassword = this.handlePassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        let savePassword = localStorage.getItem('Orceus');\n\n        if (savePassword === null) {\n            let currentUrl = window.location.href;\n            let urlObject = new URL(currentUrl);\n            \n            savePassword = urlObject.searchParams.get(\"access\");\n        }\n\n        if (savePassword !== null) {\n            this.handleSubmit(savePassword);\n        }\n    }\n\n    handlePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleSubmit(pass) {\n\n        let password = !!pass ? pass : this.state.password;\n\n        HttpPostRequest(\"/login\", {\n            password\n        })\n        .then(response => {\n            if (!response.ok) {\n                throw Error();\n            }\n            return response.json()\n        })\n        .then(data => {\n            this.setState({ loginState: \"success\" }, () => {\n                localStorage.setItem('Orceus', password);\n                AppProfile.profile = {\n                    connected: data.connected,\n                    sessionType: data.session_type,\n                }\n                setTimeout(() => {\n                    this.setState({\n                        connected: true,\n                        loginState: null,\n                    })\n                    if (!this.props.location.state) {\n                        this.props.history.push('/Orceus/cards');\n                    } else {\n                        this.props.history.push(this.props.location.state.referrer);\n                    }\n                }, 4800);\n            })\n        })\n        .catch(() => {\n            this.setState({ error: true, loginState: \"error\" }, () => {\n                localStorage.removeItem('Orceus');\n                setTimeout(()=> {\n                    this.setState({\n                        error: false,\n                        loginState: null,\n                    });\n                }, 3800);\n            });\n        });\n\n    }\n\n    render() {\n        let isMobile = window.innerWidth <= 600;\n        let inputClass = ['div-centered'];\n\n        if (!!this.state.loginState) {\n            inputClass.push('d-none')\n        }\n\n        return (\n            <div className=\"login-container\">\n                { (this.state.loginState === null && !isMobile) ? (\n                        <BackgroundVideo\n                            source={loginBackground}\n                            vKey={\"login\"}\n                        />\n                ) : null}\n                { (this.state.loginState === \"success\" && !isMobile) ? (\n                        <BackgroundVideo\n                            source={successBackground}\n                            vKey={\"login-success\"}\n                        />\n                ) : null}\n                { (this.state.loginState === \"error\" && !isMobile) ? (\n                        <BackgroundVideo\n                            source={errorBackground}\n                            vKey={\"login-success\"}\n                        />\n                ) : null}\n                <div className={inputClass.join(' ')}>\n                    <TextField\n                        onChange={this.handlePassword}\n                        value={this.state.password}\n                        placeholder=\"Mot de passe\"\n                        style={{marginRight: \"15px\"}}\n                    />\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => { this.handleSubmit() }}\n                        >\n                        Enter\n                    </Button><br/>\n                    <span className={this.state.error ? \"error\" : \"hide-error\"}>\n                        mauvais mot de passe\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {  \n    ArrowBack,\n    Add,\n    Remove,\n    ZoomOutMap,\n} from '@material-ui/icons';\n\nimport \"../assets/css/card.css\";\nimport { MapInteractionCSS } from 'react-map-interaction';\nimport { Link } from 'react-router-dom';\n\nimport { HttpGetRequest } from '../HttpRequests';\n\nexport default class CardMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            card: '',\n            infoImg: {\n                scale: 1,\n                translation: { x: 0, y: 0 }\n            }\n        };\n\n        this.getCard = this.getCard.bind(this);\n        this.reset = this.reset.bind(this);\n        this.zoomIn = this.zoomIn.bind(this);\n        this.zoomOut = this.zoomOut.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCard();\n    }\n\n    getCard() {\n        if (!this.props.id)\n            return;\n        let url = \"/cards/\" + this.props.id;\n\n        HttpGetRequest(url)\n            .then( response => {\n                if (!response)\n                    throw Error();\n                \n                return response.json();\n            })\n            .then( data => {\n                if (!data)\n                    throw Error();\n\n                this.setState({card: data[0]})\n            })\n            .catch( () => {\n                console.log(\"Erreur lors de l'update\");\n            });\n    }\n\n    reset() {\n        this.setState({\n            infoImg: {\n                scale: 1,\n                translation: { x: 0, y: 0 }\n            }\n        });\n    }\n\n    zoomIn() {\n        const zoom = this.state.infoImg.scale\n\n        this.setState({\n            infoImg: {\n                ...this.state.infoImg,\n                scale: zoom + 0.25,\n            }\n        });\n    }\n\n    zoomOut() {\n        const zoom = this.state.infoImg.scale\n\n        if (zoom === 0.25) {\n            return;\n        }\n            \n        this.setState({\n            infoImg: {\n                ...this.state.infoImg,\n                scale: zoom - 0.25,\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div\n                className=\"center\"\n                style={{\n                    height: \"100vh\",\n                    width: \"100vw\"\n                }}\n            >\n                <MapInteractionCSS\n                    value={this.state.infoImg}\n                    onChange={(infoImg) => this.setState({infoImg})}\n                >\n                    <img\n                        className=\"full-card\" \n                        src={this.state.card.big_card}\n                        alt=\"\"\n                    />\n                </MapInteractionCSS>\n                <Link\n                    className=\"tool-btn tool-back-arrow\"\n                    to=\"/Orceus/cards\">\n                    <ArrowBack/>\n                </Link>\n                <div\n                    className=\"tool-btn tool-reset\"\n                    onClick={this.reset}\n                >\n                    <ZoomOutMap/>\n                </div>\n                <div\n                    className=\"tool-btn tool-zoom-in\"\n                    onClick={this.zoomIn}\n                >\n                    <Add/>\n                </div>\n                <div\n                    className=\"tool-btn tool-zoom-out\"\n                    onClick={this.zoomOut}\n                >\n                    <Remove/>\n                </div>\n            </div>\n        );\n    }\n}","export default __webpack_public_path__ + \"static/media/logoutBtn.8eb21a28.png\";","export default __webpack_public_path__ + \"static/media/loading.9154f971.gif\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { HttpPostRequest } from '../HttpRequests';\nimport { Settings, Casino, Face } from '@material-ui/icons';\nimport { Select, Form, Input, Row, Space } from 'antd';\nimport 'antd/dist/antd.css'\n\nimport AppProfile from '../Profile';\n\nimport logoutBtn from '../assets/images/logoutBtn.png';\nimport loading from '../assets/images/loading.gif';\nimport '../assets/css/cardMenu.css';\n\nconst TYPESOPTIONS = [{\n    label: 'Personnage',\n    value: 'character'\n}, {\n    label: 'Carte',\n    value: 'map'\n}, {\n    label: 'Peuple/Race',\n    value: 'class'\n}, {\n    label: 'Mineral',\n    value: 'mineral'\n}, {\n    label: 'Végétal',\n    value: 'vegetable'\n}, {\n    label: 'Ville',\n    value: 'city'\n}, {\n    label: 'Créature',\n    value: 'monster'\n}, {\n    label: 'Artefact',\n    value: 'artefact'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\nconst SPECIESOPTIONS = [{\n    label: 'Inconnue',\n    value: 'unknown'\n}, {\n    label: 'Ciheuphe',\n    value: 'ciheuphe'\n}, {\n    label: 'Humain',\n    value: 'human'\n}, {\n    label: 'Shashouille',\n    value: 'shashouille'\n}, {\n    label: 'Robot',\n    value: 'robot'\n}, {\n    label: 'Hanylice',\n    value: 'hanylice'\n}, {\n    label: 'Suhera',\n    value: 'suhera'\n}, {\n    label: 'Ao-Nesa',\n    value: 'ao-nesa'\n}, {\n    label: 'Biri-Ozi',\n    value: 'biri-ozi'\n}, {\n    label: 'Wibsa-Thu',\n    value: 'wibsa-thu'\n}, {\n    label: 'Démon',\n    value: 'demon'\n}, {\n    label: 'Dieu/Déesse',\n    value: 'god'\n}, {\n    label: 'Sentinelle',\n    value: 'sentry'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\nexport default class CardMenu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cards: [],\n            loading: true,\n            filters: {\n                search: '',\n                type: null,\n                specie: null,\n                tags: [],\n            }\n        }\n\n        this.timer = null;\n\n        this.refFilters = new React.createRef();\n\n        this.getCardList = this.getCardList.bind(this);\n        this.logout = this.logout.bind(this);\n\n        this.handleFilters = this.handleFilters.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCardList();\n    }\n\n    getCardList() {\n        let filters = { ...this.state.filters }\n\n        for (let value in filters) {\n            if (!filters[value] || !filters[value].length) {\n                delete filters[value];\n            }\n        }\n\n        HttpPostRequest('/cards', filters)\n            .then(response => {\n                if (!response.ok) {\n                    throw Error()\n                }\n                return response.json();\n            })\n            .then(data => {\n                setTimeout(() => {\n                    this.setState({\n                        cards: data,\n                        loading: false,\n                    });\n                }, 2000);\n            })\n            .catch(() => {\n                this.setState({ loading: false });\n                console.log('Erreur lors de la recupération des datas');\n            })\n    }\n\n    logout() {\n        AppProfile.profile.connected = false;\n        AppProfile.profile.sessionType = \"\";\n\n        localStorage.removeItem('Orceus');\n        this.props.history.push('/Orceus/');\n    }\n\n    handleFilters() {\n        clearTimeout(this.timer);\n        let form = this.refFilters.current.getFieldsValue();\n\n        for (let filter in form) {\n            if (filter === 'tags') {\n                for (let i = 0; i < form[filter].length; i++) {\n                    form[filter][i] = form[filter][i].toLowerCase();\n                }\n                continue;\n            }\n            if (!!form[filter]) {\n                form[filter] = form[filter].toLowerCase();\n            }\n        }\n\n        if (form.type !== 'character') {\n            form.specie = null;\n        }\n\n        this.setState({\n            filters: form,\n        }, () => {\n            this.timer = setTimeout(() => {\n                this.getCardList();\n            }, 1000);\n        });\n    }\n\n    displayFilters() {\n        let layout = {\n            layout: \"inline\",\n            fields: [{\n                name: 'search',\n                value: this.state.filters.search\n            }, {\n                name: 'type',\n                value: this.state.filters.type\n            }, {\n                name: 'specie',\n                value: this.state.filters.specie\n            }, {\n                name: 'tags',\n                value: this.state.filters.tags\n            }],\n            onFieldsChange: this.handleFilters\n        };\n\n        return (\n            <Row type=\"flex\" justify=\"center\">\n                <Form ref={this.refFilters} {...layout}>\n                    <Form.Item name=\"search\">\n                        <Input\n                            className=\"input-filters\"\n                            placeholder=\"Recherche...\" />\n                    </Form.Item>\n                    <Form.Item name=\"type\">\n                        <Select\n                            options={TYPESOPTIONS}\n                            allowClear\n                            className=\"input-filters\"\n                            placeholder=\"Type...\"\n                            style={{ width: 200 }} />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"specie\"\n                        hidden={this.state.filters.type !== 'character'}>\n                        <Select\n                            options={SPECIESOPTIONS}\n                            allowClear\n                            className=\"input-filters\"\n                            placeholder=\"Race...\"\n                            style={{ width: 200 }} />\n                    </Form.Item>\n                    <Space style={{ height: 35 }}>\n                        <Form.Item name=\"tags\">\n                            <Select\n                                allowClear\n                                mode=\"tags\"\n                                showArrow={false}\n                                open={false}\n                                className=\"input-filters\"\n                                placeholder=\"Mot clées...\"\n                                style={{ minWidth: 200, maxWidth: 500 }} />\n\n                        </Form.Item>\n                    </Space>\n                </Form>\n            </Row>\n        );\n    }\n\n    render() {\n        let cards = this.state.cards.map((cardItem, index) => {\n            return (\n                <Link to={\"/Orceus/cards/\" + cardItem.id} key={index}>\n                    <img\n                        className=\"card-img\"\n                        src={cardItem.card}\n                        alt=\" \"\n                    />\n                </Link>\n            );\n        });\n\n        return (\n            <div style={{ width: '100vw', height: '100vh', overflow: 'hidden' }}>\n                <div className=\"header-background\">\n                    <button className=\"invisible\" onClick={this.logout}>\n                        <img\n                            src={logoutBtn}\n                            alt=\"\"\n                            style={{\n                                width: 55,\n                                height: 80,\n                                position: 'absolute',\n                                top: 10,\n                                left: 10,\n                                cursor: 'pointer'\n                            }}\n                        />\n                    </button>\n                    <div className=\"filters\">\n                        {this.displayFilters()}\n                    </div>\n                    <div className=\"menu-links\">\n                        <Link to=\"/Orceus/SelectCharacters\" key=\"toSelectCharacter\">\n                            <Face\n                                style={{ color: 'white' }}\n                                className='clickable'\n                            />\n                        </Link>\n                        {(AppProfile.get('sessionType') === \"09c71624\"\n                            || AppProfile.get('sessionType') === \"a238a5dd\") ? ([\n                            (\n                                <Link to=\"/Orceus/Rolls\" key=\"toRoll\">\n                                    <Casino\n                                        style={{ color: 'white' }}\n                                        className='clickable'\n                                    />\n                                </Link>\n                            ), (\n                                <Link to=\"/Orceus/AdminSettings\" key=\"toAdmin\">\n                                    <Settings\n                                        style={{ color: 'white' }}\n                                        className='clickable'\n                                    />\n                                </Link>\n                            )]) : null}\n                    </div>\n                </div>\n                <div className=\"container-card-menu\">\n                    {cards}\n                    {(cards.length === 0 && !this.state.loading) ? (\n                        <div style={{ color: 'white' }}>Aucune donnée</div>\n                    ) : null}\n                    {(this.state.loading) ? (\n                        <img\n                            className='loading-cards'\n                            src={loading}\n                            alt=\"loading\"\n                        />\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {\n    Route,\n    Switch,\n    useRouteMatch,\n    useParams\n} from 'react-router-dom';\n\nimport Card from './Card';\nimport CardsMenu from './CardsMenu';\n\n\nexport default function Cards({ history }) {\n    let match = useRouteMatch();\n\n    return (\n        <div>\n            <Switch>\n                <Route path={`${match.path}/:id`}>\n                    <GetIDToCard history={history} />\n                </Route>\n                <Route path={match.path}>\n                    <CardsMenu history={history} />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nfunction GetIDToCard() {\n    let { id } = useParams();\n\n    return (\n        <Card id={id} />\n    );\n}\n","import React from 'react';\nimport { Close, Delete, AddCircleOutline } from '@material-ui/icons';\nimport { Button } from '@material-ui/core';\nimport Select from 'react-select';\n\nimport { HttpGetRequest, HttpPostRequest } from '../HttpRequests';\n\nimport '../assets/css/adminModale.css';\n\nconst TYPESOPTIONS = [{\n    label: 'Personnage',\n    value: 'character'\n}, {\n    label: 'Carte',\n    value: 'map'\n}, {\n    label: 'Peuple/Race',\n    value: 'class'\n}, {\n    label: 'Mineral',\n    value: 'mineral'\n}, {\n    label: 'Végétal',\n    value: 'vegetable'\n}, {\n    label: 'Ville',\n    value: 'city'\n}, {\n    label: 'Créature',\n    value: 'monster'\n}, {\n    label: 'Artefact',\n    value: 'artefact'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\nconst SPECIESOPTIONS = [{\n    label: 'Inconnue',\n    value: 'unknown'\n}, {\n    label: 'Ciheuphe',\n    value: 'ciheuphe'\n}, {\n    label: 'Humain',\n    value: 'human'\n}, {\n    label: 'Shashouille',\n    value: 'shashouille'\n}, {\n    label: 'Robot',\n    value: 'robot'\n}, {\n    label: 'Hanylice',\n    value: 'hanylice'\n}, {\n    label: 'Suhera',\n    value: 'suhera'\n}, {\n    label: 'Ao-Nesa',\n    value: 'ao-nesa'\n}, {\n    label: 'Biri-Ozi',\n    value: 'biri-ozi'\n}, {\n    label: 'Wibsa-Thu',\n    value: 'wibsa-thu'\n}, {\n    label: 'Démon',\n    value: 'demon'\n}, {\n    label: 'Dieu/Déesse',\n    value: 'god'\n}, {\n    label: 'Sentinelle',\n    value: 'sentry'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\nconst THEMESELECT = {\n    placeholder: (provided) => ({\n        ...provided,\n        color: 'white'\n    }),\n    singleValue: (provided) => ({\n        ...provided,\n        color: 'white'\n    }),\n    menu: (provided) => ({\n      ...provided,\n      color: 'white',\n      backgroundColor: 'black',\n    }),\n    control: (provided) => ({\n        ...provided,\n        color: 'white',\n        background: 'black',\n        backgroundColor: 'black',\n    }),\n    option: (provided) => ({\n        ...provided,\n        backgroundColor: 'black',\n        \"&:hover\": {\n            backgroundColor: 'rgb(131, 131, 131)'\n        }\n    })\n}\n\nexport default class AdminModale extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            closing: false,\n            card: {\n                name: '',\n                desc: '',\n                type: null,\n                specie: null,\n                card: '',\n                big_card: '',\n                tags: [],\n                card_num: -1,\n            },\n            loading: false,\n        }\n\n        this.getCard = this.getCard.bind(this);\n        this.close = this.close.bind(this);\n        this.changeText = this.changeText.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleTags = this.handleTags.bind(this);\n        this.removeTag = this.removeTag.bind(this);\n        this.addTag = this.addTag.bind(this);\n        this.handleImg = this.handleImg.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCard();\n    }\n\n    getCard() {\n        if (!this.props.id)\n            return;\n        let url = \"/cards/\" + this.props.id;\n\n        HttpGetRequest(url)\n            .then( response => {\n                if (!response)\n                    throw Error();\n                \n                return response.json();\n            })\n            .then( data => {\n                if (!data)\n                    throw Error();\n\n                this.setState({card: data[0]})\n            })\n            .catch( () => {\n                console.log(\"Erreur lors de l'update\");\n            });\n    }\n\n    close() {\n        this.setState({\n            closing: true,\n        }, () => {\n            setTimeout(() =>{\n                this.setState({\n                    closing: false\n                }, () => {\n                    this.props.close();\n                })\n            }, 300)\n        })\n    }\n\n    changeText(value, key) {\n        let card = { ...this.state.card };\n\n        card[key] = value.toLowerCase();\n\n        this.setState({ card });\n    }\n\n    handleSelect(key, option) {\n        let card = { ...this.state.card };\n\n        card[key] = option.value;\n\n        this.setState({ card });\n    }\n\n    handleImg(key) {\n        let input = document.getElementById(key);\n\n        input.click();\n        input.addEventListener(\"change\", (e) => {\n            let file = e.target.files[0];\n            let formData = new FormData();\n\n            formData.append('image', file);\n            \n            let url = 'https://api.imgur.com/3/image';\n            let headers= {\n                'Authorization': 'Client-ID af0b96c87fae8bf',\n            };\n\n            this.setState({\n                loading: true\n            }, () => {\n                fetch(url, {\n                    mode: 'cors',\n                    headers,\n                    method: 'POST',\n                    body: formData,\n                }).then(response => {\n                    if (!response.ok) {\n                        throw Error();\n                    }\n                    return response.json();\n                }).then(data => {\n                    let card = {...this.state.card}\n\n                    if (key === 'card') {\n                        card.card = data.data.link;\n                    } else {\n                        card.big_card = data.data.link;\n                    }\n\n                    this.setState({\n                        card,\n                        loading: false\n                    });\n                }).catch((error) => {\n                    console.log(error);\n                });\n            });\n        });\n    }\n\n    handleTags(index, value) {\n        let card = { ...this.state.card };\n\n        card.tags[index] = value.toLowerCase();\n\n        this.setState({ card });\n    }\n\n    removeTag(index) {\n        let card = { ...this.state.card };\n\n        card.tags.splice(index, 1);\n\n        this.setState({ card });\n    }\n\n    addTag() {\n        let card = { ...this.state.card };\n\n        card.tags.push('');\n\n        this.setState({ card });\n    }\n\n    getValueFromOptions(options, value) {\n        if (!value) {\n            return null;\n        }\n\n        let optionSelected = null;\n\n        if (options === 'type') {\n            optionSelected = TYPESOPTIONS.filter((type) => (type.value === value));\n        } else {\n            optionSelected = SPECIESOPTIONS.filter((specie) => (specie.value === value));\n        }\n\n        return optionSelected;\n    }\n\n    submit() {\n\n        if (!!this.props.id) {\n            let url = '/card/' + this.props.id;\n\n            HttpPostRequest(url, { ...this.state.card })\n            .then( response => {\n                if (!response)\n                    throw Error();\n                \n                return response.json();\n            })\n            .then( data => {\n                if (!data)\n                    throw Error();\n                this.props.update();\n                this.props.close();\n            })\n            .catch( () => {\n                console.log(\"Erreur lors de l'update\");\n            });\n            return;\n        }\n\n        let url = '/card/';\n\n        HttpPostRequest(url, { ...this.state.card })\n        .then( response => {\n            if (!response)\n                throw Error();\n            \n            return response.json();\n        })\n        .then( data => {\n            if (!data)\n                throw Error();\n            this.props.update();\n            this.props.close()\n        })\n        .catch( () => {\n            console.log(\"Erreur lors de l'ajout\");\n        });\n        return;        \n    }\n\n    render() {\n        let classModale = ['admin-modale-container', 'margin-modale'];\n        let title = 'Création';\n        let submitText = 'Créer'\n        let cardImage = null;\n        let bigCardImage = null;\n        let cardContainerClass = ['input-card', 'p-0'];\n        let bigCardContainerClass = ['input-big-card', 'p-0'];\n        \n        if (this.props.show && !this.state.closing) {\n            classModale.push('show');\n        }\n        if (!!this.props.id) {\n            title = 'Modification';\n            submitText = 'Appliquer';\n        }\n\n        if (!!this.state.card.card) {\n            cardContainerClass.push('bg-transparent');\n            cardImage = this.state.card.card;\n        }\n        if (!!this.state.card.big_card) {\n            bigCardContainerClass.push('bg-transparent');\n            bigCardImage = this.state.card.big_card;\n        }\n\n        return (\n            <div className={classModale.join(' ')}>\n                <div className=\"header-modale pb-2\">\n                    <Close className=\"close-modale-btn\" onClick={this.close}/>\n                    <div className=\"modale-title\">{title} d'une carte</div>\n                </div>\n                <div className=\"body-modale\">\n                    <label className=\"label-modale\">Numéro :</label><br/>\n                    <input className=\"input-modale\" \n                     type=\"number\"\n                     value={(this.state.card.card_num) ? this.state.card.card_num : 0}\n                     onChange={(e) => this.changeText(e.target.value, 'card_num')}\n                    />\n                    <label className=\"label-modale\">Nom :</label><br/>\n                    <input className=\"input-modale\" \n                     type=\"text\"\n                     value={(this.state.card.name) ? this.state.card.name : ''}\n                     onChange={(e) => this.changeText(e.target.value, 'name')}\n                    />\n                    <label className=\"label-modale\">Description :</label><br/>\n                    <input className=\"input-modale\"\n                     type=\"text\"\n                     value={(this.state.card.desc) ? this.state.card.desc : ''}\n                     onChange={(e) => this.changeText(e.target.value, 'desc')}\n                    />\n\n                    <label className=\"label-modale\">Type :</label><br/>\n                    <Select\n                     className=\"input-modale\"\n                     type=\"text\"\n                     options={TYPESOPTIONS}\n                     value={this.getValueFromOptions('type', this.state.card.type)}\n                     onChange={(e) => {this.handleSelect('type', e)}}\n                     styles={THEMESELECT}\n                    />\n                    { (this.state.card.type === 'character') ? (\n                        <div>\n                            <label className=\"label-modale\">Espèce :</label><br/>\n                            <Select\n                             className=\"input-modale\"\n                             type=\"text\"\n                             options={SPECIESOPTIONS}\n                             value={this.getValueFromOptions('specie', this.state.card.specie)}\n                             onChange={(e) => {this.handleSelect('specie', e)}}\n                             styles={THEMESELECT}\n                            />\n                        </div>\n                    ) : null}\n\n                    <div>\n                        <label className=\"label-modale\">Carte (petite) :</label><br/>\n                        <input\n                         type=\"file\"\n                         id=\"card\"\n                         className=\"d-none\"\n                         alt=\"\"\n                         accept=\".jpg,.png\"\n                        />\n                        <div style={{textAlign: 'center'}}>\n                            <button className={cardContainerClass.join(' ')}\n                             onClick={() => { this.handleImg('card') }}\n                            >\n                                <img className=\"input-image\"\n                                 src={cardImage}\n                                 alt=\"\"\n                                />\n                            </button>\n                        </div>\n                    </div>\n\n                    <div>\n                        <label className=\"label-modale\">Fiche (grande) :</label><br/>\n                        <input\n                         type=\"file\"\n                         id=\"big_card\"\n                         className=\"d-none\"\n                         alt=\"\"\n                         accept=\".jpg,.png\"\n                        />\n                        <div style={{textAlign: 'center'}}>\n                            <button className={bigCardContainerClass.join(' ')}\n                             onClick={() => { this.handleImg('big_card') }}\n                            >\n                                <img className=\"input-image\"\n                                 src={bigCardImage}\n                                 alt=\"\"\n                                />\n                            </button>\n                        </div>\n                    </div>\n\n                    <label className=\"label-modale\">Tags :</label>\n                    <AddCircleOutline className=\"add-tag\" onClick={this.addTag}/><br/>\n                    {this.state.card.tags.map( (tag, index) => (\n                        <div className=\"tag-container\" key={'tag' + index}>\n                            <input\n                             type=\"text\"\n                             className=\"input-tag\"\n                             value={tag}\n                             onChange={(e) => {\n                                this.handleTags(index, e.target.value);\n                             }}\n                            />\n                            <Delete className=\"delete-tag\" onClick={() => this.removeTag(index)}/>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"footer-modale pt-2\">\n                    <Button\n                        className=\"submit-btn\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this.submit}\n                        disabled={this.state.loading}>\n                        {submitText}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { HttpGetRequest, HttpDeleteRequest } from '../HttpRequests';\nimport { Delete, Create, ArrowBackIos, AddCircleOutline } from '@material-ui/icons';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { notification } from 'antd';\n\nimport AdminModale from './AdminModale';\n\nimport AppProfile from '../Profile';\n\nimport '../assets/css/adminSettings.css'\n\nconst TYPESOPTIONS = [{\n    label: 'Personnage',\n    value: 'character'\n}, {\n    label: 'Carte',\n    value: 'map'\n}, {\n    label: 'Peuple/Race',\n    value: 'class'\n}, {\n    label: 'Mineral',\n    value: 'mineral'\n}, {\n    label: 'Végétal',\n    value: 'vegetable'\n}, {\n    label: 'Ville',\n    value: 'city'\n}, {\n    label: 'Créature',\n    value: 'monster'\n}, {\n    label: 'Artefact',\n    value: 'artefact'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\nconst SPECIESOPTIONS = [{\n    label: 'Inconnue',\n    value: 'unknown'\n}, {\n    label: 'Ciheuphe',\n    value: 'ciheuphe'\n}, {\n    label: 'Humain',\n    value: 'human'\n}, {\n    label: 'Shashouille',\n    value: 'shashouille'\n}, {\n    label: 'Robot',\n    value: 'robot'\n}, {\n    label: 'Hanylice',\n    value: 'hanylice'\n}, {\n    label: 'Suhera',\n    value: 'suhera'\n}, {\n    label: 'Ao-Nesa',\n    value: 'ao-nesa'\n}, {\n    label: 'Biri-Ozi',\n    value: 'biri-ozi'\n}, {\n    label: 'Wibsa-Thu',\n    value: 'wibsa-thu'\n}, {\n    label: 'Démon',\n    value: 'demon'\n}, {\n    label: 'Dieu/Déesse',\n    value: 'god'\n}, {\n    label: 'Sentinelle',\n    value: 'sentry'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\nexport default class AdminSettings extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: [],\n            selectedCard: null,\n            openModal: false,\n        }\n\n        this.getCardList = this.getCardList.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCardList();\n    }\n\n    getCardList() {\n        HttpGetRequest('/cards')\n        .then(data => {\n            if (!data) {\n                throw Error()\n            }\n            return data.json();\n        })\n        .then(data => {\n            this.setState({\n                cards: data\n            })\n        })\n        .catch(() => {\n            console.log('Erreur lors de la recupération des datas');\n        })\n    }\n\n    closeModal() {\n        this.setState({\n            openModal: false,\n            selectedCard: null,\n        })\n    }\n\n    unauthorized() {\n        notification.open({\n            message: 'Action non autorisée !',\n            description:\n              'Vous n\\'êtes pas autorisé à faire des modifications. Profitez du site et touchez avec les yeux ;P',\n            placement: \"top\",\n            style: {\n                background: \"rgba(255, 255, 255, 0.12)\",\n                boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n                backdropFilter: \"blur(5px)\",\n                WebkitBackdropFilter: \"blur(5px)\",\n                color: \"white\",\n            },\n        });\n    }\n\n    configureCard(id) {\n        if (AppProfile.get('sessionType') !== \"09c71624\") {\n            this.unauthorized();\n            return;\n        }\n\n        this.setState({\n            selectedCard: id,\n            openModal: true \n        })\n    }\n\n    deleteCard(id) {\n        if (AppProfile.get('sessionType') !== \"09c71624\") {\n            this.unauthorized();\n            return;\n        }\n        HttpDeleteRequest('/card/' + id)\n        .then(response => {\n            if (!response.ok) {\n                throw Error()\n            }\n            return response.json();\n        })\n        .then(data => {\n            this.getCardList();\n        })\n        .catch(() => {\n            console.log('Erreur lors de la suppression');\n        })\n    }\n\n    render() {\n        const columns = [{\n            headerName: 'N°',\n            field: 'card_num',\n            width: 80,\n        }, {\n            headerName: 'Name',\n            field: 'name',\n            width: 150,\n        }, {\n            headerName: 'Desc',\n            field: 'desc',\n            width: 200,\n        }, {\n            headerName: 'Type',\n            field: 'type',\n            width: 150,\n            renderCell: (params) => {\n                let value = params.value;\n\n                if (!value) {\n                    return (<span/>);\n                }\n\n                let obj = TYPESOPTIONS.filter( type => (type.value === value));\n\n                return (\n                    <span>{(obj.lenth !== 0) ? obj[0].label : null}</span>\n                );\n            }\n        }, {\n            headerName: 'Espèce',\n            field: 'specie',\n            width: 150,\n            renderCell: (params) => {\n                let value = params.value;\n\n                if (!value) {\n                    return (<span/>)\n                }\n\n                let obj = SPECIESOPTIONS.filter( species => (species.value === value));\n\n                return (\n                    <span>{(obj.lenth !== 0) ? obj[0].label : null}</span>\n                );\n            }\n        }, {\n            headerName: 'Tags',\n            field: 'tags',\n            flex: 1,\n        }, {\n            headerName: 'Actions',\n            sortable: false,\n            field: 'actions',\n            width: 150,\n            renderCell: (params) =>(\n                <div>\n                    <Create className=\"action-btn\"\n                        onClick={()=> this.configureCard(params.row.id)}\n                    />\n                    <Delete className=\"action-btn\"\n                        onClick={()=> this.deleteCard(params.row.id)}\n                    />\n                </div>\n            ),\n        }];\n\n        return (\n            <div className='adminsetting-container'>\n                <div className=\"d-flex row pb-2\">\n                    <Link to=\"/Orceus/cards/\" style={{ color: 'white' }}>\n                        <ArrowBackIos />\n                    </Link>                 \n                    <Button\n                        className=\"add-card-btn\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        startIcon = {<AddCircleOutline />}\n                        onClick={() => { this.configureCard(null) }}\n                    >\n                        Nouveau\n                    </Button>\n                </div>\n                <div>\n                    <DataGrid \n                        rows={this.state.cards}\n                        columns={columns}\n                        pageSize={10}\n                        autoHeight\n                     />\n                    { (this.state.openModal) ? (\n                        <AdminModale\n                            show={this.state.openModal}\n                            update={this.getCardList}\n                            close={this.closeModal}\n                            id={this.state.selectedCard}\n                        />\n                    ): null}\n                </div>\n            </div>\n        );\n    }\n}","export const paramsParticles = {\n    \"particles\":{\n        \"number\":{\n            \"value\":130,\n            \"density\":{\n                \"enable\":true,\n                \"value_area\":800\n            }\n        },\n        \"color\":{\n            \"value\":\"#f7dd5c\"\n        },\n        \"shape\":{\n            \"type\":\"circle\",\n            \"stroke\":{\n                \"width\":0,\n                \"color\":\"#000000\"\n            },\n            \"polygon\":{\n                \"nb_sides\":5\n            },\n            \"image\":{\n                \"src\":\"img/github.svg\",\n                \"width\":100,\n                \"height\":100\n            }\n        },\n        \"opacity\":{\n            \"value\": 0.3,\n            \"random\":true,\n            \"anim\":{\n                \"enable\":true,\n                \"speed\":0.2,\n                \"opacity_min\":0.1,\n                \"sync\":false\n            }\n        },\n        \"size\":{\n            \"value\":5,\n            \"random\":true,\n            \"anim\":{\n                \"enable\":true,\n                \"speed\":0.4,\n                \"size_min\":0.1,\n                \"sync\":false\n            }\n        },\n        \"line_linked\":{\n            \"enable\":true,\n            \"distance\":100,\n            \"color\":\"#f7dd5c\",\n            \"opacity\":0.4,\n            \"width\":2\n        },\n        \"move\":{\n            \"enable\":true,\n            \"speed\":0.3,\n            \"direction\":\"none\",\n            \"random\":false,\n            \"straight\":false,\n            \"out_mode\":\"out\",\n            \"bounce\":false,\n            \"attract\":{\n                \"enable\":false,\n                \"rotateX\":600,\n                \"rotateY\":1200\n            }\n        }\n    },\n    \"interactivity\":{\n        \"detect_on\":\"canvas\",\n        \"events\":{\n            \"onhover\":{\n                \"enable\":false,\n                \"mode\":\"bubble\"\n            },\n            \"onclick\":{\n                \"enable\":false,\n                \"mode\":\"repulse\"\n            },\n            \"resize\":false\n        },\n        \"modes\":{\n            \"grab\":{\n                \"distance\":400,\n                \"line_linked\":{\n                \"opacity\":0.5\n                }\n            },\n            \"bubble\":{\n                \"distance\":400,\n                \"size\":4,\n                \"duration\":0.3,\n                \"opacity\":1,\n                \"speed\":3\n            },\n            \"repulse\":{\n                \"distance\":200,\n                \"duration\":0.4\n            },\n            \"push\":{\n                \"particles_nb\":4\n            },\n            \"remove\":{\n                \"particles_nb\":2\n            }\n        }\n    },\n    \"retina_detect\":true\n}\n\nexport const PLANTS_ABYSS = [{\n    name: \"Spore de Crisse\",\n    stage: -1,\n    max: 70,\n    min: 60,\n}, {\n    name: \"Feuille de Crisse\",\n    stage: -1,\n    max: 59,\n    min: 50,\n}, {\n    name: \"Filament du néant\",\n    stage: -1,\n    max: 49,\n    min: 40,\n}, {\n    name: \"Œil de nathy\",\n    stage: -1,\n    max: 39,\n    min: 30,\n}, {\n    name: \"Lumineur\",\n    stage: -1,\n    max: 29,\n    min: 26,\n}, {\n    name: \"Ptelea\",\n    stage: -1,\n    max: 25,\n    min: 16,\n}, {\n    name: \"Cardus\",\n    stage: -1,\n    max: 15,\n    min: 10,\n}, {\n    name: \"Solanum\",\n    stage: -1,\n    max: 9,\n    min: 6,\n}, {\n    name: \"Ranun\",\n    stage: -1,\n    max: 5,\n    min: 1,\n}, {\n    name: \"Champignon poche\",\n    stage: -2,\n    max: 70,\n    min: 60,\n}, {\n    name: \"Œil de nathy\",\n    stage: -2,\n    max: 59,\n    min: 45,\n}, {\n    name: \"Fleur d'hurleur\",\n    stage: -2,\n    max: 44,\n    min: 35,\n}, {\n    name: \"Main de griffue\",\n    stage: -2,\n    max: 34,\n    min: 26,\n}, {\n    name: \"Bracyka\",\n    stage: -2,\n    max: 25,\n    min: 16,\n}, {\n    name: \"Vulua\",\n    stage: -2,\n    max: 15,\n    min: 10,\n}, {\n    name: \"Amaredia\",\n    stage: -2,\n    max: 9,\n    min: 7,\n}, {\n    name: \"Antryll\",\n    stage: -2,\n    max: 6,\n    min: 1,\n}, {\n    name: \"Champignon phosphorescent\",\n    stage: -3,\n    max: 70,\n    min: 55,\n}, {\n    name: \"Œil de nathy\",\n    stage: -3,\n    max: 54,\n    min: 45,\n}, {\n    name: \"Buisson piquant\",\n    stage: -3,\n    max: 44,\n    min: 37,\n}, {\n    name: \"Feuilles des Songes\",\n    stage: -3,\n    max: 36,\n    min: 30,\n}, {\n    name: \"Larmes de Pierre\",\n    stage: -3,\n    max: 29,\n    min: 25,\n}, {\n    name: \"Vyvitis\",\n    stage: -3,\n    max: 24,\n    min: 16,\n}, {\n    name: \"Kiono\",\n    stage: -3,\n    max: 15,\n    min: 10,\n}, {\n    name: \"Calypso\",\n    stage: -3,\n    max: 9,\n    min: 5,\n}, {\n    name: \"Phor\",\n    stage: -3,\n    max: 4,\n    min: 1,\n}, {\n    name: \"Œil de nathy\",\n    stage: -4,\n    max: 60,\n    min: 45,\n}, {\n    name: \"Itea\",\n    stage: -4,\n    max: 44,\n    min: 40,\n}, {\n    name: \"Zante\",\n    stage: -4,\n    max: 39,\n    min: 35,\n}, {\n    name: \"Cydenia\",\n    stage: -4,\n    max: 34,\n    min: 30,\n}, {\n    name: \"Pteros\",\n    stage: -4,\n    max: 29,\n    min: 25,\n}, {\n    name: \"Morae\",\n    stage: -4,\n    max: 24,\n    min: 20,\n}, {\n    name: \"Larix\",\n    stage: -4,\n    max: 19,\n    min: 13,\n}, {\n    name: \"Coeur des anges\",\n    stage: -4,\n    max: 12,\n    min: 9,\n}, {\n    name: \"Sphilyé\",\n    stage: -4,\n    max: 8,\n    min: 8,\n}, {\n    name: \"Polychroma\",\n    stage: -4,\n    max: 7,\n    min: 3,\n}, {\n    name: \"Onea\",\n    stage: -4,\n    max: 2,\n    min: 1,\n}, {\n    name: \"Œil de nathy\",\n    stage: -5,\n    max: 65,\n    min: 55,\n}, {\n    name: \"Miroir de lune\",\n    stage: -5,\n    max: 54,\n    min: 47,\n}, {\n    name: \"Cendre des bannis\",\n    stage: -5,\n    max: 46,\n    min: 35,\n}, {\n    name: \"Kotynuce\",\n    stage: -5,\n    max: 34,\n    min: 30,\n}, {\n    name: \"Qalapy\",\n    stage: -5,\n    max: 29,\n    min: 25,\n}, {\n    name: \"Ramulus\",\n    stage: -5,\n    max: 24,\n    min: 18,\n}, {\n    name: \"Eopha\",\n    stage: -5,\n    max: 17,\n    min: 13,\n}, {\n    name: \"Tiphonya\",\n    stage: -5,\n    max: 12,\n    min: 9,\n}, {\n    name: \"Cosmos\",\n    stage: -5,\n    max: 8,\n    min: 6,\n}, {\n    name: \"Yxif\",\n    stage: -5,\n    max: 5,\n    min: 2,\n}, {\n    name: \"Etana\",\n    stage: -5,\n    max: 1,\n    min: 1,\n}, ];\n\nexport const ROCKS_ABYSS = [{\n    name: \"Sicium\",\n    stage: -1,\n    min: 60,\n    max: 90,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Étoile de dentelle\",\n    stage: -1,\n    min: 40,\n    max: 49,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Kolium\",\n    stage: -1,\n    min: 50,\n    max: 59,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Fricium\",\n    stage: -1,\n    min: 30,\n    max: 39,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Corne de cristal\",\n    stage: -1,\n    min: 25,\n    max: 29,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Raone\",\n    stage: -1,\n    min: 15,\n    max: 19,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Vadion\",\n    stage: -1,\n    min: 10,\n    max: 14,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Scenarite\",\n    stage: -1,\n    min: 6,\n    max: 9,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Orite\",\n    stage: -1,\n    min: 20,\n    max: 24,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Relique Carre\",\n    stage: -1,\n    min: 1,\n    max: 5,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Neledium\",\n    stage: -2,\n    min: 60,\n    max: 90,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Chrosite\",\n    stage: -2,\n    min: 50,\n    max: 59,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Gayaïte\",\n    stage: -2,\n    min: 40,\n    max: 49,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Villtium\",\n    stage: -2,\n    min: 30,\n    max: 39,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Absicate\",\n    stage: -2,\n    min: 25,\n    max: 29,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Gopsol\",\n    stage: -2,\n    min: 20,\n    max: 24,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Syniom\",\n    stage: -2,\n    min: 10,\n    max: 19,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Elaelite\",\n    stage: -2,\n    min: 6,\n    max: 9,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Relique sphere\",\n    stage: -2,\n    min: 1,\n    max: 5,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Alboze\",\n    stage: -3,\n    min: 60,\n    max: 75,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Aparyum\",\n    stage: -3,\n    min: 45,\n    max: 59,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Tinspare\",\n    stage: -3,\n    min: 35,\n    max: 44,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Siguiom\",\n    stage: -3,\n    min: 25,\n    max: 34,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Prasite\",\n    stage: -3,\n    min: 20,\n    max: 24,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Taemyte\",\n    stage: -3,\n    min: 15,\n    max: 19,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Haeliste\",\n    stage: -3,\n    min: 10,\n    max: 14,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Eatryll\",\n    stage: -3,\n    min: 8,\n    max: 9,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Asporate\",\n    stage: -3,\n    min: 6,\n    max: 7,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Helaryte\",\n    stage: -3,\n    min: 1,\n    max: 1,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Relique losange\",\n    stage: -3,\n    min: 2,\n    max: 5,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Saothite\",\n    stage: -4,\n    min: 60,\n    max: 65,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Inimite\",\n    stage: -4,\n    min: 55,\n    max: 59,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Gybrom\",\n    stage: -4,\n    min: 50,\n    max: 54,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Châtaigne de bronze\",\n    stage: -4,\n    min: 45,\n    max: 49,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Thenpolithe\",\n    stage: -4,\n    min: 40,\n    max: 44,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Iokelom\", //milieu chaud\n    stage: -4,\n    min: 35,\n    max: 39,\n    in: ['hot'],\n    notIn: [],\n}, {\n    name: \"Diahite\", //milieu chaud\n    stage: -4,\n    min: 30,\n    max: 34,\n    in: ['hot'],\n    notIn: [],\n}, {\n    name: \"Miarcyte\", //milieu non chaud\n    stage: -4,\n    min: 26,\n    max: 29,\n    in: [],\n    notIn: ['hot'],\n}, {\n    name: \"Freej\", //milieu chaud\n    stage: -4,\n    min: 26,\n    max: 29,\n    in: ['hot'],\n    notIn: [],\n}, {\n    name: \"Sukium\", //milieu chaud\n    stage: -4,\n    min: 20,\n    max: 25,\n    in: ['hot'],\n    notIn: [],\n}, {\n    name: \"Chloaryte\", //milieu non chaud\n    stage: -4,\n    min: 14,\n    max: 19,\n    in: [],\n    notIn: ['hot'],\n}, {\n    name: \"Mibhy\", // milieu chaud\n    stage: -4,\n    min: 14,\n    max: 19,\n    in: ['hot'],\n    notIn: [],\n}, {\n    name: \"Vialithe\",\n    stage: -4,\n    min: 10,\n    max: 13,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Abhakyte\",\n    stage: -4,\n    min: 8,\n    max: 9,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Tusiro\",\n    stage: -4,\n    min: 5,\n    max: 7,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Relique rectangulaire\",\n    stage: -4,\n    min: 1,\n    max: 4,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Exelyte\",\n    stage: -5,\n    min: 40,\n    max: 50,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Moonum\",\n    stage: -5,\n    min: 40,\n    max: 44,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Terkyum\",\n    stage: -5,\n    min: 35,\n    max: 39,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Melyte\",\n    stage: -5,\n    min: 30,\n    max: 34,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Anecyte\",\n    stage: -5,\n    min: 25,\n    max: 29,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Zylium\",\n    stage: -5,\n    min: 20,\n    max: 24,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Sydenium\",\n    stage: -5,\n    min: 15,\n    max: 19,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Loroïte\",\n    stage: -5,\n    min: 10,\n    max: 14,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Actase\",\n    stage: -5,\n    min: 5,\n    max: 9,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Alafyte\",\n    stage: -5,\n    min: 3,\n    max: 4,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Aksuth\",\n    stage: -5,\n    min: 1,\n    max: 2,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Hesium\",\n    stage: -6,\n    min: 61,\n    max: 65,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Ludicote\",\n    stage: -6,\n    min: 57,\n    max: 60,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Sanirium\",\n    stage: -6,\n    min: 53,\n    max: 56,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Weddlet\",\n    stage: -6,\n    min: 48,\n    max: 52,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Quirior\",\n    stage: -6,\n    min: 44,\n    max: 47,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Chardakrite\",\n    stage: -6,\n    min: 41,\n    max: 43,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Cyate\",\n    stage: -6,\n    min: 36,\n    max: 40,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Oxyphyte\",\n    stage: -6,\n    min: 33,\n    max: 35,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Ninium\",\n    stage: -6,\n    min: 28,\n    max: 32,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Buknarium\",\n    stage: -6,\n    min: 24,\n    max: 27,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Rhodkra\",\n    stage: -6,\n    min: 18,\n    max: 23,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Thenxythe\",\n    stage: -6,\n    min: 14,\n    max: 17,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Waryah\",\n    stage: -6,\n    min: 11,\n    max: 13,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Spium\",\n    stage: -6,\n    min: 8,\n    max: 10,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Xemlyne\",\n    stage: -6,\n    min: 4,\n    max: 7,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Yxoth\",\n    stage: -6,\n    min: 1,\n    max: 3,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Anaphite\",\n    stage: -7,\n    min: 28,\n    max: 30,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Natrahyte\",\n    stage: -7,\n    min: 25,\n    max: 27,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Etlanythe\",\n    stage: -7,\n    min: 22,\n    max: 24,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Kogyum\",\n    stage: -7,\n    min: 19,\n    max: 21,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Zymose\",\n    stage: -7,\n    min: 16,\n    max: 18,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Ekaole\",\n    stage: -7,\n    min: 14,\n    max: 15,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Lublyte\",\n    stage: -7,\n    min: 11,\n    max: 13,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Stualium\",\n    stage: -7,\n    min: 8,\n    max: 10,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Uralype\",\n    stage: -7,\n    min: 5,\n    max: 7,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Genuth\",\n    stage: -7,\n    min: 2,\n    max: 4,\n    in: [],\n    notIn: [],\n}, {\n    name: \"Zakrotone\",\n    stage: -7,\n    min: 1,\n    max: 1,\n    in: [],\n    notIn: [],\n}, ];","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Select, Form, Input, Button } from 'antd';\nimport { ArrowBackIos } from '@material-ui/icons';\n\nimport { PLANTS_ABYSS, ROCKS_ABYSS } from '../constants.js';\nimport '../assets/css/rollingPage.css';\n\nexport default class RollingPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            number: 0,\n            type: 'plants',\n            stage: -1,\n            zone: null,\n            foundedItems: [],\n        };\n\n        this.types = [{\n            label: 'Plantes',\n            value: 'plants',\n        }, {\n            label: 'Pierres',\n            value: 'rocks',\n        }];\n\n        this.zones = [{\n            label: 'Chaude',\n            value: 'hot'\n        }, {\n            label: 'Normale',\n            value: null,\n        }];\n\n        this.refForm = React.createRef();\n\n        this.submitForm = this.submitForm.bind(this);\n        this.makeASearch = this.makeASearch.bind(this);\n    };\n\n    rollDice() {\n        return Math.floor(Math.random() * 100) + 1;\n    }\n\n    makeASearch() {\n        const {number, type, stage, zone} = this.state;\n        let foundedItems = [];\n\n        for (let i = 0; i < number; i ++) {\n            let foundedItem = null;\n            switch (type) {\n                case 'plants':\n                    foundedItem = this.findPlants(stage);\n                    break;\n                case 'rocks':\n                    foundedItem = this.findRocks(stage, zone);\n                    break;\n                default:\n                    break;\n            }\n\n            if (foundedItem !== null) {\n                foundedItems.push(foundedItem);\n            }\n        };\n\n        this.makeRapport(foundedItems);\n    }\n\n    makeRapport(items) {\n        let listItems = [...new Set(items)];\n        let result = [];\n        \n        for (let i = 0; i < listItems.length; i++) {\n            result.push({\n                name: listItems[i].name,\n                count: items.filter(item => item === listItems[i]).length\n            });\n        }\n\n        this.setState({\n            foundedItems: result,\n        });\n    }\n\n    findPlants(stage) {\n        let plants = PLANTS_ABYSS.filter(plant => plant.stage === stage);\n        let dice = this.rollDice();\n\n        let plantFind = plants.find(plant => (plant.min <= dice && dice <= plant.max));\n        \n        if (!plantFind) {\n            return null;\n        }\n\n        return plantFind;\n    }\n\n    findRocks(stage, zone) {\n        let rocks = ROCKS_ABYSS.filter(rock => rock.stage === stage);\n\n        if (zone === null) {\n            rocks = rocks.filter(rock => rock.in.length === 0);\n        } else {\n            rocks = rocks.filter(rock => (rock.in.includes(zone) || !rock.notIn.includes(zone)));\n        }\n\n        let dice = this.rollDice();\n\n        let rockFind = rocks.find(rock => (rock.min <= dice && dice <= rock.max));\n        \n        if (!rockFind) {\n            return null;\n        }\n\n        return rockFind;\n    }\n\n    submitForm() {\n        let form = this.refForm.current.getFieldsValue();\n\n        this.setState({\n            number: parseInt(form.number),\n            type: form.type,\n            stage: parseInt(form.stage),\n            zone: form.zone,\n        }, () => {\n            this.makeASearch();\n        });\n    }\n\n    render() {\n        let layout = {\n            style: { color: 'white' },\n            initialValues: {\n                number: 0,\n                type: 'plants',\n                stage: -1,\n                zone: null,\n            },\n            layout: 'vertical',\n            className: 'p-2'\n        };\n\n        return (\n            <div style={{width: '100vw', height: '100vh', overflow: 'hidden'}}>\n                <div className=\"p-2\">\n                    <Link to=\"/Orceus/cards/\" style={{ color: 'white' }}>\n                        <ArrowBackIos />\n                    </Link>\n                </div>\n                <h1 className=\"title-rolling\">Recherches des aventuriers :</h1>\n                <Form {...layout} ref={this.refForm}>\n                    <Form.Item label=\"Nombre de recherches :\" name=\"number\">\n                        <Input type=\"number\"/>\n                    </Form.Item>\n                    <Form.Item label=\"Type :\" name=\"type\">\n                        <Select options={this.types} />\n                    </Form.Item>\n                    <Form.Item label=\"Zone :\" name=\"zone\">\n                        <Select options={this.zones} />\n                    </Form.Item>\n                    <Form.Item label=\"Étage :\" name=\"stage\">\n                        <Input\n                            type=\"number\"\n                        />\n                    </Form.Item>\n                </Form>\n                <div style={{ textAlign: 'center' }}>\n                    <Button onClick={this.submitForm}>Lancer</Button>\n                </div>\n                <div className=\"results-rolling m-2 p-1\" style={{color: 'white'}}>\n                    <div className=\"mb-1\">Résultats :</div>\n                    {(this.state.foundedItems.length === 0)\n                        ? \"Rien trouvé\"\n                        : (\n                        <ul style={{ listStyleType: 'none' }}>\n                            {\n                                this.state.foundedItems.map(item => (\n                                    <li>\n                                        {item.count}x {item.name}\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                    )}\n                </div>\n            </div>\n        )\n    };\n\n};","import \"../../assets/css/characterMenu.css\";\n\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Button } from 'antd';\nimport { Settings, Casino, Book, Create } from '@material-ui/icons';\nimport {\n    DataGrid,\n    GridColumnMenuContainer, \n    GridFilterMenuItem, \n    SortGridMenuItems\n} from '@material-ui/data-grid';\n\nimport AppProfile from '../../Profile';\n\nimport { HttpGetRequest, HttpPutRequest } from \"../../HttpRequests\";\n\nexport default class CharacterMenu extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            characters: [],\n            id: null,\n            loading: true,\n        };\n\n        this.addNewCharacter = this.addNewCharacter.bind(this);\n    }\n\n    componentDidMount() {\n        HttpGetRequest('/characters')\n            .then(response => {\n                if (!response.ok) {\n                    throw Error()\n                }\n                return response.json();\n            })\n            .then(data => {\n                setTimeout(() => {\n                    this.setState({\n                        characters: data,\n                        loading: false,\n                    });\n                }, 2000);\n            })\n            .catch(() => {\n                this.setState({ loading: false });\n                console.log('Erreur lors de la recupération des datas');\n            })\n    }\n\n    addNewCharacter() {\n        HttpPutRequest('/characters/create')\n            .then(response => {\n                if (!response.ok) {\n                        throw Error()\n                    }\n                    return response.json();\n                })\n                .then(data => {\n                    setTimeout(() => {\n                        this.setState({\n                            id : data.id,\n                            loading: false,\n                        });\n                    }, 2000);\n                })\n                .catch(() => {\n                    this.setState({ loading: false });\n                    console.log('Erreur lors de la recupération des datas');\n                })\n    }\n\n    render() {\n        const CustomColumnMenu = (props) => {\n            const { hideMenu, currentColumn } = props;\n            return (\n                <GridColumnMenuContainer\n                    hideMenu={hideMenu}\n                    currentColumn={currentColumn}\n                >\n                    <SortGridMenuItems onClick={hideMenu} column={currentColumn} />\n                    <GridFilterMenuItem onClick={hideMenu} column={currentColumn} />\n                </GridColumnMenuContainer>\n            );\n        };\n\n        const columns = [{\n            headerName: 'Personnage',\n            field: \"firstname\",\n            disableColumnSelector: true,\n            flex: 2,\n            minWidth: 150,\n            key: \"lastname\",\n            renderCell: (params) => {\n                return <span>{params.row.firstname} {params.row.lastname}</span>\n            }\n\n        }, {\n            headerName: 'Level',\n            field: 'level',\n            minWidth: 100,\n            flex: 1,\n            disableColumnFilter: true,\n            disableColumnMenu: true,\n        }, {\n            headerName: 'Actions',\n            field: 'id',\n            sortable: false,\n            width: 150,\n            disableColumnFilter: true,\n            disableColumnMenu: true,\n            renderCell: (params) =>(\n                <div>\n                    <Link to={\"/Orceus/SelectCharacters/\" + params.row.id}>\n                        <Create className=\"action-btn\"/>\n                    </Link>\n                    {/* <Delete className=\"action-btn\"\n                        onClick={()=> console.log(\"delete : \" + params.row.name)}\n                    /> */}\n                </div>\n            ),\n        }]\n\n        if (this.state.id != null) {\n            return <Redirect to={\"/Orceus/SelectCharacters/\" + this.state.id} />\n        }\n\n        return (\n            <div style={{ height: \"100vh\", width: \"100vw\" }}>\n                <div className=\"header-character\">\n                    <div className=\"header-link-container\">\n                        <Link to=\"/Orceus/Cards\" key=\"toCards\">\n                            <Book\n                                style={{ color: 'white' }}\n                                className='clickable'\n                            />\n                        </Link>\n                        {(AppProfile.get('sessionType') === \"09c71624\" ||\n                            AppProfile.get('sessionType') === \"a238a5dd\") ? ([(\n                            <Link to=\"/Orceus/Rolls\" key=\"toRoll\">\n                                <Casino\n                                    style={{ color: 'white' }}\n                                    className='clickable'\n                                />\n                            </Link>\n                        ), (\n                            <Link to=\"/Orceus/AdminSettings\" key=\"toAdmin\">\n                                <Settings\n                                    style={{ color: 'white' }}\n                                    className='clickable'\n                                />\n                            </Link>\n                        )]) : null}\n                    </div>\n                </div>\n                <div className=\"new-character-container\">\n                    <Button\n                        className=\"new-character-btn\"\n                        onClick={this.addNewCharacter}\n                    >\n                        Nouveau\n                    </Button>\n                </div>\n                <div className=\"grid-character\">\n                    <DataGrid\n                        loading={this.state.loading}\n                        rows={this.state.characters}\n                        components={{\n                            ColumnMenu: CustomColumnMenu\n                        }}\n                        columns={columns}\n                        pageSize={10}\n                        rowsPerPageOptions={[10]}\n                    />\n                </div>\n            </div>\n        );\n    }\n}","import { Link } from 'react-router-dom';\nimport { ArrowBack, Backpack, Face, Save } from '@mui/icons-material';\nimport { useParams } from 'react-router-dom';\n\nimport \"../../assets/css/characterHeader.css\";\n\nexport default function CharacterHeader(props) {\n    let { id } = useParams();\n\n    return(\n        <div className=\"character-header-container\">\n            <div className=\"ch-btn-container\">\n                <Link to=\"/Orceus/SelectCharacters\">\n                    <ArrowBack/>\n                </Link>\n            </div>\n            <div className=\"ch-btn-container\">\n                <Save onClick={props.saveCharacter}/>\n                <Link to={\"/Orceus/SelectCharacters/\" + id}>\n                    <Face/>\n                </Link>\n                <Link to={\"/Orceus/SelectCharacters/\" + id + \"/inventory\"}>\n                    <Backpack/>\n                </Link>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {\n    CloseOutlined,\n    PlusCircleOutlined,\n    MinusCircleOutlined,\n    EditOutlined,\n    DeleteOutlined,\n    CloseCircleOutlined,\n    CheckCircleOutlined\n} from '@ant-design/icons';\nimport {\n    Select,\n    Upload,\n    Button,\n    Popover,\n    Modal,\n    Form,\n    Input\n} from 'antd';\nimport { v4 as uuid } from 'uuid';\nimport CharacterHeader from './ChararcterHeader';\nimport \"../../assets/css/character.css\";\n\nconst { TextArea } = Input;\n\nconst CHAR_BASE = {\n    shashouille: {\n        pilleur: {\n            att: -2,\n            def: -2,\n            vit: -1,\n            agi: 4,\n            puiss: 2,\n            stren: -3,\n        },\n        artificier: {\n            att: 0,\n            def: -3,\n            vit: -1,\n            agi: 2,\n            puiss: 2,\n            stren: -3,\n        },\n        nomade: {\n            att: -2,\n            def: 0,\n            vit: -1,\n            agi: 4,\n            puiss: 2,\n            stren: -3,\n        },\n        artisan: {\n            att: -2,\n            def: -2,\n            vit: -1,\n            agi: 4,\n            puiss: 2,\n            stren: -3,\n        },\n        medecin: {\n            att: -2,\n            def: 0,\n            vit: -1,\n            agi: 4,\n            puiss: 2,\n            stren: -3,\n        },\n        illumine: {\n            att: -2,\n            def: 0,\n            vit: -1,\n            agi: 2,\n            puiss: 5,\n            stren: -3,\n        }\n    },\n    ciheuphe: {\n        dresseur: {\n            att: 1,\n            def: 0,\n            vit: 2,\n            agi: 3,\n            puiss: 1,\n            stren: 0,\n        },\n        chasseur: {\n            att: 2,\n            def: 0,\n            vit: 2,\n            agi: 2,\n            puiss: -2,\n            stren: 1,\n        },\n        danseur: {\n            att: -2,\n            def: -2,\n            vit: 2,\n            agi: 2,\n            puiss: 3,\n            stren: -1,\n        },\n        nomade: {\n            att: -2,\n            def: 0,\n            vit: 2,\n            agi: 2,\n            puiss: 0,\n            stren: 0,\n        },\n        herboriste: {\n            att: -2,\n            def: 0,\n            vit: 2,\n            agi: 3,\n            puiss: 0,\n            stren: 0,\n        },\n        erudit: {\n            att: -2,\n            def: 0,\n            vit: 2,\n            agi: 3,\n            puiss: 0,\n            stren: -1,\n        },\n        illumine: {\n            att: 0,\n            def: 0,\n            vit: 2,\n            agi: 2,\n            puiss: 3,\n            stren: 0,\n        }\n    },\n    humain: {\n        chevalier: {\n            att: 1,\n            def: 1,\n            vit: 0,\n            agi: -2,\n            puiss: 0,\n            stren: 2,\n        },\n        tireur: {\n            att: 2,\n            def: 0,\n            vit: 0,\n            agi: 2,\n            puiss: 0,\n            stren: 0,\n        },\n        barde: {\n            att: 1,\n            def: 0,\n            vit: 0,\n            agi: 1,\n            puiss: 2,\n            stren: 0,\n        },\n        illumine: {\n            att: 0,\n            def: 0,\n            vit: 0,\n            agi: 0,\n            puiss: 3,\n            stren: 0,\n        },\n        medecin: {\n            att: 0,\n            def: 0,\n            vit: 0,\n            agi: 1,\n            puiss: 0,\n            stren: 0,\n        },\n        createur: {\n            att: 1,\n            def: 0,\n            vit: 0,\n            agi: 1,\n            puiss: 0,\n            stren: 0,\n        },\n        nomade: {\n            att: -2,\n            def: 0,\n            vit: 0,\n            agi: 0,\n            puiss: 0,\n            stren: 0,\n        },\n    },\n    robot: {\n        assassin: {\n            att: 3,\n            def: -3,\n            vit: 4,\n            agi: 3,\n            puiss: 0,\n            stren: 2,\n        },\n        soigneur: {\n            att: -1,\n            def: 1,\n            vit: 0,\n            agi: 1,\n            puiss: 0,\n            stren: -1,\n        },\n        protecteur: {\n            att: -1,\n            def: 1,\n            vit: 0,\n            agi: 1,\n            puiss: 0,\n            stren: -1,\n        },\n        tireur: {\n            att: 4,\n            def: -4,\n            vit: 1,\n            agi: 1,\n            puiss: 0,\n            stren: 2,\n        },\n        createur: {\n            att: 0,\n            def: -4,\n            vit: 1,\n            agi: 4,\n            puiss: 0,\n            stren: 1,\n        },\n    },\n    suhera: {\n        sorciere: {\n            att: 0,\n            def: -3,\n            vit: -1,\n            agi: 1,\n            puiss: 4,\n            stren: 3,\n        },\n        angeliste: {\n            att: -3,\n            def: 1,\n            vit: -2,\n            agi: 1,\n            puiss: 5,\n            stren: -1,\n        },\n        distordeur: {\n            att: -3,\n            def: -3,\n            vit: 2,\n            agi: 3,\n            puiss: 5,\n            stren: 1,\n        },\n    },\n    hanylice: {\n        tele_kinesiste: {\n            att: -1,\n            def: 3,\n            vit: -2,\n            agi: -3,\n            puiss: 5,\n            stren: 1,\n        },\n        controleur: {\n            att: 0,\n            def: 3,\n            vit: -2,\n            agi: -2,\n            puiss: 5,\n            stren: 1,\n        },\n    }\n};\n\nconst RACESTYPES = [{\n    value: 'humain',\n    label: 'Humain',\n}, {\n    label: 'Shashouille',\n    value: 'shashouille'\n} ,{\n    label: 'Ciheuphe',\n    value: 'ciheuphe'\n}, {\n    label: 'Robot',\n    value: 'robot'\n}, {\n    label: 'Suhera',\n    value: 'suhera'\n}, {\n    label: 'Hanylice',\n    value: 'hanylice'\n}];\n\nconst JOBS = {\n    shashouille: [{\n        label: 'Pilleur',\n        value: 'pilleur',\n    }, {\n        label: 'Artificier',\n        value: 'artificier',\n    }, {\n        label: 'Nomade',\n        value: 'nomade',\n    }, {\n        label: 'Artisan',\n        value: 'artisan',\n    }, {\n        label: 'Médecin',\n        value: 'medecin',\n    }, {\n        label: 'Illuminé',\n        value: 'illumine',\n    }],\n    ciheuphe: [{\n        label: 'Dresseur',\n        value: 'dresseur',\n    }, {\n        label: 'Chasseur',\n        value: 'chasseur',\n    }, {\n        label: 'Danseur',\n        value: 'danseur',\n    }, {\n        label: 'Nomade',\n        value: 'nomade',\n    }, {\n        label: 'Herboriste',\n        value: 'herboriste',\n    }, {\n        label: 'Érudit',\n        value: 'erudit',\n    }, {\n        label: 'Illuminé',\n        value: 'illumine',\n    }],\n    humain: [{\n        label: 'Chevalier',\n        value: 'chevalier',\n    }, {\n        label: 'Tireur',\n        value: 'tireur',\n    }, {\n        label: 'Barde',\n        value: 'barde',\n    }, {\n        label: 'Illuminé',\n        value: 'illumine',\n    }, {\n        label: 'Médecin',\n        value: 'medecin',\n    }, {\n        label: 'Créateur',\n        value: 'createur',\n    }, {\n        label: 'Nomade',\n        value: 'nomade',\n    }],\n    robot: [{\n        label: 'Assassin',\n        value: 'assassin',\n    }, {\n        label: 'Soigneur',\n        value: 'soigneur',\n    }, {\n        label: 'Protecteur',\n        value: 'protecteur',\n    }, {\n        label: 'Tireur',\n        value: 'tireur',\n    }, {\n        label: 'Créateur',\n        value: 'createur',\n    }],\n    suhera: [{\n        label: 'Sorcière',\n        value: 'sorciere',\n    }, {\n        label: 'Angéliste',\n        value: 'angeliste',\n    }, {\n        label: 'Distordeur',\n        value: 'distordeur',\n    }],\n    hanylice: [{\n        label: 'Télé-Kinésiste',\n        value: 'tele_kinesiste',\n    }, {\n        label: 'Controleur',\n        value: 'controleur',\n    }]\n};\n\nconst NAMEPUISS = [{\n    label: \"Puiss. Naty\",\n    value: \"puissance\",\n}, {\n    label: \"Malédiction\",\n    value: \"malediction\"\n}, {\n    label: \"Focus\",\n    value: \"focus\"\n}]\n\nexport default class Character extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            modalIsOpen: false,\n            selectedSkill: null,\n            modifiedSkill: {\n                name: \"\",\n                desc: \"\",\n            },\n            character: {\n                id: null,\n                equipment: {\n                    weapon: [],\n                    plastron: [],\n                    shield: [],\n                    helmet: [],\n                    glove: [],\n                    shoe: [],\n                    topClothes: [],\n                    botClothes: [],\n                    amulet: [],\n                    other: []\n                },\n                fight: {\n                    att: 0,\n                    def: 0,\n                    vit: 0,\n                    agi: 0,\n                    puiss: 0,\n                    stren: 0,\n                    \n                    cac: 0,\n                    dist: 0,\n                    mag: 0,\n                    def_phy: 0,\n                    def_mag: 0,\n                    dodge: 0,\n                },\n                firstname: \"\",\n                lastname: \"\",\n                hp_max: 1,\n                hp: 1,\n                image: null,\n                job: null,\n                level: 1,\n                specie: null,\n                stats: {\n                    agi: 1,\n                    att: 1,\n                    char: 1,\n                    def: 1,\n                    luck: 1,\n                    obs: 1,\n                    prec: 1,\n                    pui: 1,\n                    stren: 1,\n                    vit: 1,\n                    know: 1,\n                },\n                years_old: 0,\n                config: {\n                    puissName: null,\n                },\n                lore: '',\n                notes: '',\n                inventory: [],\n                skills: []\n            }\n        }\n\n        this.newForm = React.createRef();\n\n        this.changeCharacterInfo = this.changeCharacterInfo.bind(this);\n        this.changeCharacterStats = this.changeCharacterStats.bind(this);\n        this.changeCharacterFight = this.changeCharacterFight.bind(this);\n        this.setImageCharacter = this.setImageCharacter.bind(this);\n        this.removeImageCharacter = this.removeImageCharacter.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.addSkill = this.addSkill.bind(this);\n        this.selectSkill = this.selectSkill.bind(this);\n        this.changeSkill = this.changeSkill.bind(this);\n        this.deleteSkill = this.deleteSkill.bind(this);\n        this.validateSkillModification = this.validateSkillModification.bind(this);\n        this.renderSkills = this.renderSkills.bind(this);\n        this.renderEquipment = this.renderEquipment.bind(this);\n        this.renderEquiped = this.renderEquiped.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ character: this.props.character });\n        this.actualizeFightStats();\n    }\n\n    componentDidUpdate() {\n        if (this.state.statsFightChange) {\n            this.actualizeFightStats();\n        }\n    }\n \n    actualizeFightStats() {\n        let { character } = this.state;\n        if (!character.specie || !character.job) {\n            return;\n        }\n\n        let base = CHAR_BASE[character.specie][character.job] || null;\n\n        if (base === null) {\n            return;\n        }\n\n        base = {\n            att: base.att + character.fight.att,\n            def: base.def + character.fight.def,\n            vit: base.vit + character.fight.vit,\n            agi: base.agi + character.fight.agi,\n            puiss: base.puiss + character.fight.puiss,\n            stren: base.stren + character.fight.stren,\n        }\n\n        character.hp_max = base.att + (8 * base.def) + (3 * base.vit) + (3 * base.agi) + base.puiss + (6 * base.stren);\n        character.fight.cac = Math.round(Math.sqrt(character.level * base.att) + (Math.pow(base.stren, 2) / 15));\n        character.fight.dist = Math.round(Math.pow(character.level, 2) / 10 + ( Math.pow(base.att, 2) * 0.02) * (1 + base.stren * 0.2));\n        character.fight.mag = Math.round((base.att + base.puiss + (character.level / 10)) * (base.puiss / 20 + base.att / 40 + character.level / 100));\n        character.fight.def_phy = Math.round(13 * Math.log(base.def));\n        character.fight.def_mag = Math.round(13 * Math.log(base.def));\n        character.fight.dodge = 6 + Math.round((4 * Math.log((base.vit + base.agi) / 2)) / 1.3);\n\n        if (character.specie === \"suhera\" || character?.specie === \"hanylice\") {\n            character.fight.cac = 0;\n            character.fight.dist = 0;\n            character.fight.mag = Math.round(Math.pow(character.level, 2) / 10 + ( Math.pow(base.puiss, 2) * 0.02) * (1 + base.att * 0.2));\n        }\n\n        this.setState({statsFightChange: false}, () => this.props.actualizeCharacter(character));\n    }\n\n    changeCharacterInfo(key, value) {\n        let character = {...this.state.character};\n        character[key] = value;\n\n        this.setState({\n            character,\n            statsFightChange: true\n        }, () => this.props.actualizeCharacter(this.state.character));\n    }\n\n    changeCharacterStats(key, value) {\n        let character = {...this.state.character};\n        if (value > 75) {\n            value = 75;\n        }\n\n        character.stats[key] = value; \n\n        this.setState({ character }, () => this.props.actualizeCharacter(character));\n    }\n\n    changeCharacterFight(key, value) {\n        let character = {...this.state.character};\n        character.fight[key] = parseInt(value); \n\n        this.setState({\n            character,\n            statsFightChange: true,\n        }, () => this.props.actualizeCharacter(character));\n    }\n\n    changeSearchValue(key, value) {\n        this.setState({ [key]: value });\n    }\n\n    setImageCharacter(data) {\n        let { character } = this.state;\n\n        let reader = new FileReader();\n        reader.onload = (e) => {\n            character.image = e.target.result;\n            this.setState({ character }, () => this.props.actualizeCharacter(character));\n        };\n        reader.readAsDataURL(data.fileList[0].originFileObj);\n    }\n\n    removeImageCharacter() {\n        let { character } = this.state;\n        character.image = null;\n\n        this.setState({ character }, () => this.props.actualizeCharacter(character));\n    }\n\n    unequipItem(part, id) {\n        let { character } = this.state;\n        let equipedPartIDs = [...character.equipment[part]];\n\n        character.equipment[part] = equipedPartIDs.filter((item) => item !== id);\n\n        this.setState({ character }, () => this.props.actualizeCharacter(character))\n    }\n\n    openModal() {\n        this.setState({ modalIsOpen : true });\n    }\n\n    closeModal() {\n        this.setState({ modalIsOpen: false }, () => this.newForm.current.resetFields());\n    }\n\n    addSkill() {\n        let { character } = this.state;\n\n        let form = this.newForm.current.getFieldsValue();\n\n        let skill = {\n            id: uuid(),\n            name: form.name,\n            desc: form.desc,\n        };\n\n        if (!skill.name | !skill.desc)\n            return;\n\n        if (!character.skills)\n            character.skills = [];\n\n        character.skills.push(skill);\n\n        this.setState({\n            character,\n            modalIsOpen: false\n        }, () => {\n            this.newForm.current.resetFields();\n            this.props.actualizeCharacter(this.state.character);\n        });\n    }\n\n    selectSkill(id) {\n        let modifiedSkill = {...this.state.modifiedSkill};\n        let skills = !!this.state.character.skills ? [...this.state.character.skills] : [];\n\n        if (id !== null) {\n            skills.forEach((skill) => {\n                if (skill.id === id) {\n                    modifiedSkill  = {\n                        name: skill.name,\n                        desc: skill.desc\n                    }\n                }\n            })\n        } else {\n            modifiedSkill  = {\n                name: \"\",\n                desc: \"\"\n            }\n        }\n        \n        this.setState({\n            selectedSkill: id,\n            modifiedSkill\n        });\n    }\n\n    changeSkill(part, value) {\n        let modifiedSkill = {...this.state.modifiedSkill};\n\n        modifiedSkill[part] = value;\n\n        this.setState({ modifiedSkill });\n    }\n\n    validateSkillModification() {\n        let selectedSkill = this.state.selectedSkill;\n        let modifiedSkill = {...this.state.modifiedSkill};\n        let character = this.state.character;\n        let skills = !!character.skills ? [...character.skills] : [];\n\n        skills.forEach((skill) => {\n            if (skill.id === selectedSkill) {\n                skill.name = modifiedSkill.name;\n                skill.desc = modifiedSkill.desc;\n            }\n        })\n\n        modifiedSkill  = {\n            name: \"\",\n            desc: \"\"\n        }\n\n        character.skills = skills;\n\n        this.setState({\n            modifiedSkill,\n            character,\n            modalIsOpen: false,\n            selectedSkill: null\n        });\n    }\n\n    deleteSkill(id) {\n        let character = this.state.character;\n        let skills = !!character.skills ? [...character.skills] : [];\n\n        character.skills = skills.filter(skill => {\n            return skill.id !== id;\n        })\n\n        this.setState({ character });\n    }\n\n    renderSkills() {\n        let skills = !!this.state.character.skills ? [...this.state.character.skills] : [];\n        let modifiedSkill = {...this.state.modifiedSkill};\n\n        return skills.map(skill => {\n            if (!this.state.selectedSkill || this.state.selectedSkill !== skill.id) {\n                return (\n                    <div className=\"skill-container\">\n                    <div className=\"skill-title-container\">\n                        <div className=\"skill-name-text\">\n                            {skill.name} :\n                        </div>\n                        <EditOutlined\n                         className=\"skill-icon clickable\"\n                         onClick={() => this.selectSkill(skill.id)}\n                        />\n                        <DeleteOutlined\n                         className=\"skill-icon clickable\"\n                         onClick={() => this.deleteSkill(skill.id)}\n                        />\n                    </div>\n                    <div className=\"skill-desc-text\">\n                        <TextArea\n                            defaultValue={skill.desc}\n                            readOnly\n                            autoSize\n                        />\n                    </div>\n                </div>\n                )\n            }\n            return (\n                <div className=\"skill-container\" key={skill.id}>\n                    <div className=\"skill-title-container\">\n                        <div className=\"skill-edited-name-text\">\n                            <Input\n                             type=\"text\" \n                             defaultValue={modifiedSkill.name}\n                             onChange={(e) => this.changeSkill(\"name\", e.target.value)}\n                            /> :\n                            <CloseCircleOutlined\n                             className=\"skill-icon clickable\"\n                             onClick={() => this.selectSkill(null)}\n                            />\n                            <CheckCircleOutlined\n                             className=\"skill-icon clickable\"\n                             onClick={() => this.validateSkillModification()}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"skill-edited-desc-text\">\n                        <TextArea \n                         autoSize={{\n                            minRows: 2,\n                            maxRows: 5,\n                         }}\n                         defaultValue={modifiedSkill.desc}\n                         onChange={(e) => this.changeSkill(\"desc\", e.target.value)}\n                        />\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    renderEquiped(part) {\n        let equipedPartIDs = [...this.state.character.equipment[part]];\n\n        let equipedPart = this.state.character.inventory.filter((item) => (\n            equipedPartIDs.includes(item.id)\n        ));\n\n        return equipedPart.map((item) => {\n            return (\n                <div className=\"equiped-item\" key={item.id}>\n                    <div className=\"equiped-item-name\">\n                        {item.name}\n                    </div>\n                    <div className=\"equiped-item-carac\">\n                        {item.carac}\n                    </div>\n                    <div className=\"equiped-item-actions\">\n                        <MinusCircleOutlined\n                            className=\"clickable\"\n                            onClick={() => this.unequipItem(part, item.id)}\n                        />\n                    </div>\n                </div>\n            );\n        })\n    }\n\n    renderEquipment(filter, part) {\n        let { character } = this.state;\n        let options = [];\n        \n        let inventory = character?.inventory.filter((item) => (item.nb > 0))\n\n        if (!inventory) {\n            return null;\n        }\n\n        if (!!filter) {\n            inventory = inventory.filter((item) => (item.type === filter))\n        }\n\n        options = inventory.map((item) => ({\n            label: item.name,\n            value: item.id\n        }));\n\n        return (\n            <Select\n                className=\"select-equipment\"\n                options={options}\n                value={null}\n                notFoundContent={\"Rien Trouvé\"}\n                onChange={(value) => {\n                    let { character } = this.state;\n\n                    character.equipment[part].push(value);\n\n                    this.setState({ character }, () => this.props.actualizeCharacter(character));\n                }}\n            />\n        );\n    }\n\n    render() {\n        const { character, modalIsOpen } = this.state;\n\n        return (\n            <div className=\"character-container\">\n                <CharacterHeader saveCharacter={this.props.saveCharacter}/>\n                <div className=\"info-container\">\n                    <div className=\"lastname\">\n                        <span>Nom : </span>\n                        <input\n                            placeholder=\"Nom\"\n                            value={character?.lastname}\n                            onChange={(e) => this.changeCharacterInfo(\"lastname\", e.target.value)}\n                            />\n                    </div>\n                    <div className=\"firstname\">\n                        <span>Prénom : </span>\n                        <input\n                            placeholder=\"Prénom\"\n                            value={character?.firstname}\n                            onChange={(e) => this.changeCharacterInfo(\"firstname\", e.target.value) }\n                        />\n                    </div>\n                    <div className=\"age\">\n                        <span>Age : </span>\n                        <input\n                            placeholder=\"Age\"\n                            type=\"number\"\n                            value={character?.years_old}\n                            onChange={(e) => this.changeCharacterInfo(\"years_old\", e.target.value)}\n                        />\n                    </div>\n                    <div className=\"species\">\n                        <span>Race : </span>\n                        <Select\n                            options={RACESTYPES}\n                            placeholder=\"Race\"\n                            value={character?.specie}\n                            onChange={(val) => this.changeCharacterInfo(\"specie\", val)}\n                        />\n                    </div>\n                    <div className='job'>\n                        <span>Métier : </span>\n                        <Select\n                            showSearch\n                            options={(!!character?.specie) ? JOBS[character.specie] : null}\n                            searchValue={this.state.jobSearch}\n                            placeholder=\"Métier\"\n                            value={character?.job}\n                            notFoundContent={null}\n                            onChange={(val) => this.changeCharacterInfo(\"job\", val)}\n                            onSearch={(val) => {\n                                this.changeCharacterInfo(\"job\", val);\n                                this.changeSearchValue(\"jobSearch\", val);\n                            }}\n                            onInputKeyDown={(input) => {\n                                if (input.key === \"Enter\") {\n                                    this.changeCharacterInfo(\"job\", this.state.jobSearch);\n                                    this.changeSearchValue(\"jobSearch\", '');\n                                }\n                            }}\n\n                        />\n                    </div>\n                    <div className='hp'>\n                        <span>P.V. : </span><br/>\n                        <input\n                            className={\n                                (character?.hp <= 0) ? \n                                    (character?.hp < (-1 * character?.hp_max)) ? \n                                        \"dead-hp\"\n                                        : \"critical-hp\"\n                                    : (character?.hp > character?.hp_max) ?\n                                        \"over-hp\"\n                                        : \"normal-hp\"\n                            }\n                            type=\"number\"\n                            value={character?.hp}\n                            onChange={(val) => {\n                                this.changeCharacterInfo(\"hp\", val.target.value);\n                            }}\n                        />\n                    </div>\n                    <div className=\"image\">\n                        <Upload\n                            name='file'\n                            action={null}\n                            itemRender={null}\n                            showUploadList={false}\n                            onChange={this.setImageCharacter}\n                        >\n                            <div className=\"preview-image\">\n                                <div className=\"background-image\"/>\n                                <CloseOutlined\n                                    onClick={this.removeImageCharacter}\n                                    className={\n                                        (!!character?.image)\n                                        ? \"remove-image\"\n                                        : \"remove-image hidden\"\n                                    } \n                                />\n                                <Button className=\"button-upload\" type=\"text\">\n                                    {(!!character?.image) ? (\n                                        <img\n                                            alt=\"example\"\n                                            style={{\n                                                width: '100%',\n                                                height: '100%'\n                                            }}\n                                            src={character?.image}\n                                        />\n                                    ) : \"Pas d'image\"}\n                                </Button>\n                            </div>\n                        </Upload>\n                    </div>\n                </div>\n\n                <div className=\"row-container\">\n                    <div className=\"column-container\">\n                        <div className=\"stats-container\">\n                            <div className=\"title\">Statistiques</div>\n                            <div className=\"grid\">\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Attaque :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.att}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"att\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.att % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Défense :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.def}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"def\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.def % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Vitesse :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.vit}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"vit\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.vit % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Agilité :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.agi}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"agi\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.agi % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <Select\n                                        className=\"puissname\"\n                                        options={NAMEPUISS}\n                                        value={character?.config?.puissName || \"puissance\"}\n                                        onChange={(val) => {\n                                            let { character } = this.state;\n                                            character.config.puissName = val; \n                                            this.setState({\n                                                character\n                                            }, () => this.props.actualizeCharacter(character));\n                                        }}\n                                    /> :\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.pui}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"pui\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.pui % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Charisme :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.char}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"char\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.char % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Précision :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.prec}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"prec\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.prec % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Observation :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.obs}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"obs\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.obs % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Chance :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.luck}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"luck\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.luck % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Force :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.stren}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"stren\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.stren % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                                <div>\n                                    <div className=\"name-cat\">\n                                        Connaissance :\n                                    </div>\n                                    <input\n                                        type=\"number\"\n                                        value={character?.stats?.know}\n                                        max={75}\n                                        onChange={(val) => {\n                                            this.changeCharacterStats(\"know\", val.target.value)\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"graph-container\">\n                                    <div className=\"graph-background\">\n                                        <div\n                                            className=\"graph\"\n                                            style={{width: character?.stats?.know % 100 + \"%\"}}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"fight-container\">\n                            <div className=\"title\">Statistiques de combat</div>\n                            <div className=\"list\">\n                                <div className=\"species\">\n                                    Race : {\n                                        (!!character?.specie)\n                                            ? RACESTYPES.find(\n                                                item => character.specie === item.value\n                                            )?.label\n                                            :\"-\"\n                                    }\n                                </div>\n                                <div className=\"job\">\n                                    Métier : {\n                                        (!!character?.specie)\n                                            ? JOBS[character.specie].find(item => (\n                                                character.job === item.value)\n                                            )?.label\n                                            : \"-\"\n                                    }\n                                </div>\n                                <div className=\"level\">\n                                    Level : <input\n                                        type=\"number\"\n                                        placeholder={1}\n                                        value={character?.level}\n                                        onChange={(e) => this.changeCharacterInfo(\"level\", e.target.value)}\n                                    />\n                                </div>\n                                <div className=\"hp\">\n                                    P.V. : {character?.hp_max}\n                                </div>\n                                <div className=\"att\">\n                                    Attaque :\n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.att}\n                                        onChange={(val) => this.changeCharacterFight(\"att\", val.target.value)}\n                                    />\n                                </div>\n                                <div className=\"def\">\n                                    Défense : \n                                    <input\n                                        type=\"number\"\n                                        placeholder= {0}\n                                        value={character?.fight?.def}\n                                        onChange={(val) => this.changeCharacterFight(\"def\", val.target.value)}\n                                    />\n                                </div>\n                                <div className=\"vit\">\n                                    Vitesse : \n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.vit}\n                                        onChange={(val) => this.changeCharacterFight(\"vit\", val.target.value)}\n                                    />\n                                </div>\n                                <div className=\"agi\">\n                                    Agilité : \n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.agi}\n                                        onChange={(val) => this.changeCharacterFight(\"agi\", val.target.value)}\n                                    />\n                                </div>\n                                <div className=\"puiss\">\n                                    <Select\n                                        className=\"puissname\"\n                                        options={NAMEPUISS}\n                                        disabled\n                                        value={character?.config?.puissName || \"puissance\"}\n                                    />:\n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.puiss}\n                                        onChange={(val) => this.changeCharacterFight(\"puiss\", val.target.value)}\n                                    />\n                                </div>\n                                <div className=\"stren\">\n                                    Force :\n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.stren}\n                                        onChange={(val) => this.changeCharacterFight(\"stren\", val.target.value)}\n                                    />\n                                </div>\n                                <div className=\"cac\">\n                                    Dégâts (C. à C.) :\n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.cac}\n                                        disabled\n                                    />\n                                </div>\n                                <div className=\"dist\">\n                                    Dégâts (Dist.) :\n                                    <input\n                                        type=\"number\"\n                                        placeholder= {0}\n                                        value={character?.fight?.dist}\n                                        disabled\n                                    />\n                                </div>\n                                <div className=\"mag\">\n                                    Dégâts (Mag.) :\n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.mag}\n                                        disabled\n                                    />\n                                </div>\n                                <div className=\"def_phy\">\n                                    Déf. Phy. : \n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.def_phy}\n                                        disabled\n                                    />\n                                </div>\n                                <div className=\"def_mag\">\n                                    Déf. Mag. : \n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.def_mag}\n                                        disabled\n                                    />\n                                </div>\n                                <div className=\"dodge\">\n                                    Esquive :\n                                    <input\n                                        type=\"number\"\n                                        placeholder={0}\n                                        value={character?.fight?.dodge}\n                                        disabled\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"column-container\">\n                        <div className=\"competencies-container\">\n                            <div className=\"title\">\n                                Competences\n                                <PlusCircleOutlined\n                                    onClick={this.openModal}\n                                    className=\"add-competency clickable\"\n                                />\n                            </div>\n                            <div>\n                                <Modal\n                                    className=\"modal-new-item\"\n                                    visible={modalIsOpen}\n                                    onOk={this.addSkill}\n                                    onCancel={this.closeModal}\n                                >\n                                    <Form\n                                        className=\"add-to-inventory\"\n                                        ref={this.newForm}\n                                        initialValues={{\n                                            name: \"\",\n                                            type: null,\n                                            stage: null,\n                                            desc: \"\",\n                                            carac: \"\",\n                                            nb: null\n                                        }}\n                                        labelCol={{ span: 8 }}\n                                        wrapperCol={{ span: 16 }}\n                                        labelAlign=\"left\"\n                                        onFinish={this.addItem}\n                                    >\n                                        <Form.Item\n                                            key={\"name\"}\n                                            label=\"Nom\"\n                                            name=\"name\"\n                                            rules={[{\n                                                required: true,\n                                                message: 'Le nom est obligatoire.',\n                                            }]}\n                                        >\n                                            <Input type=\"text\" />\n                                        </Form.Item>\n\n                                        <Form.Item\n                                            key={\"desc\"}\n                                            label=\"Description\"\n                                            name=\"desc\"\n                                            rules={[{\n                                                required: true,\n                                                message: 'La description est obligatoire.',\n                                            }]}\n                                        >\n                                            <TextArea \n                                                autoSize={{\n                                                    minRows: 2,\n                                                    maxRows: 5,\n                                                }}\n                                            />\n                                        </Form.Item>\n                                    </Form>\n                                </Modal>\n                                {this.renderSkills()}\n                            </div>\n                        </div>\n                        \n                        <div className=\"equip-container\">\n                            <div className=\"title\">Équipement</div>\n                            <div className=\"equipment\">\n                                <div>\n                                    Arme :\n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"weapon\", \"weapon\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"weapon\")}\n                                </div>\n                                <div>\n                                    Plastron :\n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"armor\", \"plastron\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"plastron\")}\n                                </div>\n                                <div>\n                                    Bouclier : \n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"shield\", \"shield\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                {this.renderEquiped(\"shield\")}\n                                </div>\n                                <div>Casque : \n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"armor\", \"helmet\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"helmet\")}\n                                </div>\n                                <div>Gants : \n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"armor\", \"glove\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"glove\")}\n                                </div>\n                                <div>Chaussures : \n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"armor\", \"shoe\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"shoe\")}\n                                </div>\n                                <div>Vêtement Haut : \n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"clothes\", \"topClothes\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"topClothes\")}\n                                </div>\n                                <div>Vêtement Bas : \n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"clothes\", \"botClothes\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"botClothes\")}\n                                </div>\n                                <div>Amulette : \n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(\"amulet\", \"amulet\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"amulet\")}\n                                </div>\n                                <div>Autre : \n                                    <Popover\n                                        color=\"black\"\n                                        content={this.renderEquipment(null, \"other\")}\n                                    >\n                                        <PlusCircleOutlined\n                                            className=\"add-equipment clickable\"\n                                        />\n                                    </Popover>\n                                </div>\n                                <div>\n                                    {this.renderEquiped(\"other\")}\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"lore-container\">\n                            <div className=\"title\">Lore</div>\n                            <TextArea\n                                value={character?.lore}\n                                autoSize\n                                onChange={(val) => this.changeCharacterInfo(\"lore\", val.target.value)}\n                            />\n                        </div>\n                        \n                        <div className=\"note-container\">\n                            <div className=\"title\">Notes</div>\n                            <TextArea\n                                value={character?.notes}\n                                autoSize\n                                onChange={(val) => this.changeCharacterInfo(\"notes\", val.target.value)}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {\n    Table,\n    Select,\n    Form,\n    Input,\n    Modal\n} from 'antd';\nimport { DeleteOutline, AddCircleOutline } from '@mui/icons-material';\nimport { v4 as uuid } from 'uuid'; \n\nimport CharacterHeader from './ChararcterHeader';\n\nimport \"../../assets/css/inventory.css\";\n\nconst { TextArea } = Input;\n\nconst TYPES = [{\n    label: \"Arme\",\n    value: \"weapon\"\n}, {\n    label: \"Bouclier\",\n    value: \"shield\"\n}, {\n    label: \"Armure\",\n    value: \"armor\"\n}, {\n    label: \"Amulette\",\n    value: \"amulet\"\n}, {\n    label: \"Vêtement\",\n    value: \"clothes\"\n},{\n    label: \"Pierre\",\n    value: \"rock\"\n}, {\n    label: \"Plante\",\n    value: \"plant\"\n}, {\n    label: \"Relique\",\n    value: \"relic\"\n}, {\n    label: \"Artefact\",\n    value: \"artefact\"\n}, {\n    label: \"Accessoire\",\n    value: \"accessory\"\n}, {\n    label: \"Consommable\",\n    value: \"consumable\"\n}, {\n    label: \"Autre\",\n    value: \"other\"\n}];\n\nexport default class Inventory extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            character: null,\n            modalIsOpen: false,\n            searchValue: \"\"\n        };\n\n        this.newForm = React.createRef();\n\n        this.onChangeItem = this.onChangeItem.bind(this);\n        this.removeItem = this.removeItem.bind(this);\n        this.openModal = this.openModal.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n        this.onChangeNewItem = this.onChangeNewItem.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({ character : this.props.character });\n    }\n\n    onChangeItem = (value, id, property) => {\n        let { character } = this.state;\n        let index = character.inventory.findIndex((item) => item.id === id);\n\n        if (index === -1) {\n            return;\n        }\n\n        character.inventory[index][property] = value;\n\n        this.setState({ character }, () => this.props.actualizeCharacter(this.state.character));\n    }\n\n    openModal = () => {\n        this.setState({\n            modalIsOpen: true\n        });\n    }\n\n    closeModal = () => {\n        this.setState({ modalIsOpen: false });\n    }\n\n    removeItem = (id) => {\n        let { character } = this.state;\n        let index = character.inventory.findIndex((item) => item.id === id);\n\n\n        if (index === -1) {\n            return;\n        }\n\n        character.inventory.splice(index, 1);\n        character.equipment.amulet = character.equipment.amulet.filter(item => item !== id);\n        character.equipment.botClothes = character.equipment.botClothes.filter(item => item !== id);\n        character.equipment.topClothes = character.equipment.topClothes.filter(item => item !== id);\n        character.equipment.glove = character.equipment.glove.filter(item => item !== id);\n        character.equipment.helmet = character.equipment.helmet.filter(item => item !== id);\n        character.equipment.plastron = character.equipment.plastron.filter(item => item !== id);\n        character.equipment.shield = character.equipment.shield.filter(item => item !== id);\n        character.equipment.shoe = character.equipment.shoe.filter(item => item !== id);\n        character.equipment.weapon = character.equipment.weapon.filter(item => item !== id);\n        character.equipment.other = character.equipment.other.filter(item => item !== id);\n        \n\n        this.setState({ character }, () => this.props.actualizeCharacter(this.state.character));\n    }\n\n    addItem = () => {\n        let { character } = this.state;\n\n        let form = this.newForm.current.getFieldsValue();\n        let item = {\n            id: uuid(),\n            name: form.name,\n            type: form.type,\n            stage: form.stage,\n            desc: form.desc,\n            carac: form.carac,\n            nb: form.nb,\n        };\n\n        if (!item.name || !item.nb || !item.type) {\n            return;\n        }\n\n        character.inventory.push(item);\n\n        this.setState({ \n            character,\n            modalIsOpen: false\n        }, () => {\n            this.newForm.current.resetFields();\n            this.props.actualizeCharacter(this.state.character);\n        });\n\n    }\n\n    onChangeNewItem = (val, property) => {\n        let { newItem } = this.state;\n\n        newItem[property] = val;\n\n        this.setState({ newItem });\n    }\n\n    sortByType(a, b) {\n        let objectA = TYPES.find(item => item.value === a.type);\n        let objectB = TYPES.find(item => item.value === b.type);\n\n        let labelA = objectA.label;\n        let labelB = objectB.label;\n\n        return labelA.localeCompare(labelB);\n    }\n\n    render() {\n        let { character, searchValue } = this.state;\n        let { modalIsOpen } = this.state;\n\n        let isMobile = window.screen.width < 900;\n        let isTablet = window.screen.width >= 900 && window.screen.width < 1000;\n        let inventory = (!!character?.inventory) ? [...character.inventory] : [];\n\n        if (!!searchValue) {\n            inventory = inventory.filter(item => (\n                item.name.toLowerCase().includes(searchValue.toLowerCase())\n            ));\n        }\n\n        const columns = (isMobile) ? [{\n            title: \"Nom\",\n            dataIndex: \"name\",\n            key: \"name\",\n            defaultSortOrder: 'descend',\n            width: 150,\n            sorter: (a, b) => a.name.localeCompare(b.name),\n            render: (name, item) => (\n                <div title={name}>\n                    <Input\n                        value={name}\n                        bordered={false}\n                        onChange={(val) => this.onChangeItem(val.target.value, item.id, \"name\")}\n                    />\n                </div>\n            )\n        }, {\n            title: \"Type\",\n            dataIndex: \"type\",\n            key: \"type\",\n            defaultSortOrder: 'descend',\n            width: 150,\n            sorter: this.sortByType,\n            render: (type, item) => (\n                <Select\n                    style={{width: 100}}\n                    value={type}\n                    options={TYPES}\n                    onChange={(val) => this.onChangeItem(val, item.id, \"type\")} \n                />\n            )\n        }, {\n            title: \"Étage\",\n            dataIndex: \"stage\",\n            key: \"stage\",\n            defaultSortOrder: 'descend',\n            width: 100,\n            sorter: (a, b) => a.stage - b.stage,\n            render: (stage, item) => (\n                <Input\n                    type='number'\n                    value={stage}\n                    bordered={false}\n                    onChange={(val) => this.onChangeItem(val.target.value, item.id, \"stage\")}\n                />\n            )\n        }, {\n            title: \"Description\",\n            dataIndex: \"desc\",\n            key: \"desc\",\n            render: (desc, item) => (\n                <TextArea\n                    autoSize\n                    value={desc}\n                    bordered={false}\n                    onChange={(val) => this.onChangeItem(val.target.value, item.id, \"desc\")}\n                />\n            )\n        }, {\n            title: \"Nombre\",\n            dataIndex: \"nb\",\n            key: \"nb\",\n            width: 50,\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.nb - b.nb,\n            render: (nb, item) => (\n                <Input\n                    type=\"number\"\n                    value={nb}\n                    bordered={false}\n                    onChange={(val) => this.onChangeItem(val.target.value, item.id, \"nb\")}\n                />\n            )\n        }, {\n            title: (\n                <AddCircleOutline\n                    className=\"icon-header clickable\"\n                    onClick={this.openModal}\n                />\n            ),\n            key: \"action\",\n            width: 50,\n            render: (_, item) => (\n                <DeleteOutline \n                    className=\"clickable\"\n                    onClick={() => this.removeItem(item.id)}\n                />\n            )\n        }]\n        : [{\n            title: \"Nom\",\n            dataIndex: \"name\",\n            key: \"name\",\n            width: 200,\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.name.localeCompare(b.name),\n            render: (name, item) => (\n                <div title={name}>\n                    <Input\n                        value={name}\n                        bordered={false}\n                        onChange={(val) => this.onChangeItem(val.target.value, item.id, \"name\")}\n                    />\n                </div>\n            )\n        }, {\n            title: \"Type\",\n            dataIndex: \"type\",\n            key: \"type\",\n            defaultSortOrder: 'descend',\n            width: 150,\n            sorter: this.sortByType,\n            render: (type, item) => (\n                <Select\n                    style={{width: (isTablet) ? 100 : 125}}\n                    value={type}\n                    options={TYPES}\n                    onChange={(val) => this.onChangeItem(val, item.id, \"type\")} \n                />\n            )\n        }, {\n            title: \"Étage\",\n            dataIndex: \"stage\",\n            key: \"stage\",\n            width: 100,\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.stage - b.stage,\n            render: (stage, item) => (\n                <Input\n                    type='number'\n                    value={stage}\n                    bordered={false}\n                    onChange={(val) => this.onChangeItem(val.target.value, item.id, \"stage\")}\n                />\n            )\n        }, {\n            title: \"Description\",\n            dataIndex: \"desc\",\n            key: \"desc\",\n            render: (desc, item) => (\n                <TextArea\n                    autoSize\n                    value={desc}\n                    bordered={false}\n                    onChange={(val) => this.onChangeItem(val.target.value, item.id, \"desc\")}\n                />\n            )\n        }, {\n            title: \"Caractéristiques\",\n            dataIndex: \"carac\",\n            key: \"carac\",\n            render: (carac, item) => (\n                <TextArea\n                    autoSize\n                    value={carac}\n                    bordered={false}\n                    onChange={(val) => this.onChangeItem(val.target.value, item.id, \"carac\")}\n                />\n            )\n        }, {\n            title: \"Nombre\",\n            dataIndex: \"nb\",\n            key: \"nb\",\n            width: 50,\n            defaultSortOrder: 'descend',\n            sorter: (a, b) => a.nb - b.nb,\n            render: (nb, item) => (\n                <Input\n                    type=\"number\"\n                    value={nb}\n                    bordered={false}\n                    onChange={(val) => this.onChangeItem(val.target.value, item.id, \"nb\")}\n                />\n            )\n        }, {\n            title: (\n                <AddCircleOutline\n                    className=\"icon-header clickable\"\n                    onClick={this.openModal}\n                />\n            ),\n            key: \"action\",\n            width: 50,\n            render: (_, item) => (\n                <DeleteOutline \n                    className=\"clickable\"\n                    onClick={() => this.removeItem(item.id)}\n                />\n            )\n        }];\n\n        return (\n            <div className=\"character-container\">\n                <CharacterHeader saveCharacter={this.props.saveCharacter}/>\n                <div className=\"search-container\">\n                    <Input\n                        className=\"search-input\"\n                        placeholder=\"Nom Recherché...\"\n                        value={searchValue}\n                        allowClear\n                        onChange={(val) => this.setState({ searchValue: val.target.value })}\n                    />\n                </div>\n                <div className=\"margin-table\">\n                    <Table \n                        className=\"inventory-table\"\n                        columns={columns}\n                        dataSource={inventory}\n                    />\n                </div>\n                <Modal\n                    className=\"modal-new-item\"\n                    visible={modalIsOpen}\n                    onOk={this.addItem}\n                    onCancel={this.closeModal}\n                >\n                    <Form\n                        className=\"add-to-inventory\"\n                        ref={this.newForm}\n                        initialValues={{\n                            name: \"\",\n                            type: null,\n                            stage: null,\n                            desc: \"\",\n                            carac: \"\",\n                            nb: null\n                        }}\n                        labelCol={{ span: 8 }}\n                        wrapperCol={{ span: 16 }}\n                        labelAlign=\"left\"\n                        onFinish={this.addItem}\n                    >\n                        <Form.Item\n                            label=\"Nom\"\n                            name=\"name\"\n                            rules={[{\n                                required: true,\n                                message: 'Le nom est obligatoire.',\n                            }]}\n                        >\n                            <Input type=\"text\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Type\"\n                            name=\"type\"\n                            rules={[{\n                                required: true,\n                                message: 'Le type est obligatoire.',\n                            }]}\n                        >\n                            <Select options={TYPES}/>\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Étage\"\n                            name=\"stage\"\n                        >\n                            <Input style={{ width: 100 }} type=\"number\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Description\"\n                            name=\"desc\"\n                        >\n                            <TextArea \n                                autoSize={{\n                                    minRows: 2,\n                                    maxRows: 5,\n                                }}\n                            />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Caractéristiques\"\n                            name=\"carac\"\n                        >\n                            <Input type=\"text\" />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Nombre\"\n                            name=\"nb\"\n                            rules={[{\n                                required: true,\n                                message: 'Le nombre est obligatoire.',\n                            }]}\n                        >\n                            <Input style={{ width: 100 }} type=\"number\" />\n                        </Form.Item>\n                    </Form>\n                </Modal>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { notification } from 'antd';\nimport Character from './Character';\nimport Inventory from './Inventory';\nimport loadingImg from '../../assets/images/loading.gif';\nimport { HttpGetRequest, HttpPutRequest } from \"../../HttpRequests\";\n\nimport \"../../assets/css/character.css\";\n\nexport default class CharacterData extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            character: null,\n            loading: true,\n        };\n\n        this.actualizeCharacter = this.actualizeCharacter.bind(this);\n    }\n\n    componentDidMount(prevProps) {\n        if (prevProps?.id !== this.props?.id) {\n            HttpGetRequest('/characters/' + this.props.id)\n            .then(response => {\n                if (!response.ok) {\n                    throw Error()\n                }\n                return response.json();\n            })\n            .then(data => {\n                setTimeout(() => {\n                    this.setState({\n                        character: data,\n                        loading: false,\n                    });\n                }, 2000);\n            })\n            .catch(() => {\n                this.setState({ loading: false });\n                console.log('Erreur lors de la recupération des datas');\n            })\n        }\n    }\n\n    actualizeCharacter = (character) => {\n        this.setState({ character });\n    }\n\n    saveCharacter = () => {\n        HttpPutRequest('/characters/' + this.props.id, this.state.character)\n            .then(response => {\n                if (!response.ok) {\n                    throw Error()\n                }\n                return response.json();\n            })\n            .then(data => {\n                notification.open({\n                    className: \"notification\",\n                    message: 'Sauvegarde réussie !'\n                });\n            })\n            .catch(() => {\n                this.setState({ loading: false });\n                console.log('Erreur lors de la recupération des datas');\n            })\n    }\n\n    render() {\n        let { character, loading } = this.state;\n        let { localisation } = this.props;\n\n        if (loading) {\n            return (\n                <div style={{width: \"100%\", display: \"flex\", justifyContent: \"center\"}}>\n                    <img\n                        className=\"loading-character\"\n                        src={loadingImg}\n                        alt=\"loading\"\n                    />\n                </div>\n            );\n        }\n\n        if (localisation === \"inventory\") {\n            return (\n                <Inventory \n                    character={character}\n                    actualizeCharacter={this.actualizeCharacter}\n                    saveCharacter={this.saveCharacter}\n                />\n            );\n        }\n    \n        return (\n            <Character\n                character={character}\n                actualizeCharacter={this.actualizeCharacter}\n                saveCharacter={this.saveCharacter}\n            />\n        );\n    }\n}","import React from 'react';\nimport {\n    Route,\n    Switch,\n    useRouteMatch,\n    useParams\n} from 'react-router-dom';\n\nimport CharacterMenu from './CharacterMenu';\nimport CharacterData from './CharacterData';\n\nexport default function SwitchCharacters({ history }) {\n    let match = useRouteMatch();\n\n    return (\n        <div>\n            <Switch>\n                <Route path={`${match.path}/:id`}>\n                    <GetCharacterId history={history} />\n                </Route>\n                <Route path={match.path}>\n                    <CharacterMenu history={history} />\n                </Route>\n            </Switch>\n        </div>\n    )\n}\n\nfunction GetCharacterId() {\n    let { id } = useParams();\n    let localisation = window.location.href.split(\"/\").pop();\n\n    return (<CharacterData id={id} localisation={localisation}/>);\n}","import {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tuseHistory,\n} from \"react-router-dom\";\n\nimport React from \"react\";\nimport Login from './components/Login';\nimport Cards from './components/Cards';\nimport AdminSettings from './components/AdminSettings';\nimport RollingPage from \"./components/RollingPage\";\nimport SelectCharacters from \"./components/Character/SwitchCharacters\";\nimport AppProfile from './Profile';\nimport './App.css';\n\nfunction PrivateRoute({...props}) {\n\tlet history = useHistory();\n\n\tif (!AppProfile.get('connected')) {\n\t\thistory.push('/Orceus/')\n\t}\n\n\treturn (\n\t\t<Route history={history} path={props.path} component={props.component}/>\n\t);\n}\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<PrivateRoute path=\"/Orceus/cards\" component={Cards} />\n\t\t\t\t\t<PrivateRoute path=\"/Orceus/AdminSettings\" component={AdminSettings} />\n\t\t\t\t\t<PrivateRoute path=\"/Orceus/SelectCharacters\" component={SelectCharacters} />\n\t\t\t\t\t<PrivateRoute path=\"/Orceus/Rolls\" component={RollingPage} />\n\t\t\t\t\t<Route exact path=\"/Orceus/\" component={Login} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}