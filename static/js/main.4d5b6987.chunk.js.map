{"version":3,"sources":["Profile.js","HttpRequests.js","components/BackgroundVideo.js","assets/background/loginBackground.mp4","assets/background/successBackground.mp4","assets/background/errorBackground.mp4","components/Login.js","components/Card.js","components/CardsMenu.js","components/Cards.js","components/AdminModale.js","components/AdminSettings.js","App.js","reportWebVitals.js","index.js"],"names":["AppProfile","profile","connected","isAdmin","get","key","this","URL_API","HttpGetRequest","route","a","headers","Headers","fetch","method","response","console","log","HttpPostRequest","body","mode","JSON","stringify","BackgroundVideo","props","className","autoPlay","loop","muted","src","source","type","vKey","Login","state","password","error","loginState","handlePassword","bind","handleSubmit","savePassword","localStorage","getItem","e","setState","target","value","pass","then","ok","Error","json","data","setItem","is_admin","setTimeout","location","history","push","referrer","catch","removeItem","isMobile","window","innerWidth","inputClass","loginBackground","successBackground","errorBackground","join","TextField","onChange","placeholder","style","marginRight","Button","variant","onClick","React","Component","CardMenu","card","getCard","id","height","defaultScale","zoomIn","zoomOut","resetTransform","Fragment","to","ArrowBack","ZoomIn","ZoomOut","ZoomOutMap","big_card","alt","cards","loading","getCardList","logout","map","cardItem","index","color","Settings","length","Loop","Cards","match","useRouteMatch","path","GetIDToCard","useParams","TYPESOPTIONS","label","SPECIESOPTIONS","THEMESELECT","provided","singleValue","menu","backgroundColor","control","background","option","AdminModale","closing","name","desc","specie","tags","close","changeText","handleSelect","handleTags","removeTag","addTag","handleImg","submit","input","document","getElementById","click","addEventListener","file","files","formData","FormData","append","link","splice","options","filter","update","classModale","title","submitText","cardImage","bigCardImage","cardContainerClass","bigCardContainerClass","show","Close","getValueFromOptions","styles","accept","textAlign","AddCircleOutline","tag","Delete","disabled","AdminSettings","selectedCard","openModal","closeModal","HttpDeleteRequest","columns","headerName","field","width","renderCell","params","obj","lenth","species","flex","sortable","Create","configureCard","row","deleteCard","ArrowBackIos","startIcon","rows","pageSize","autoHeight","PrivateRoute","useHistory","component","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4d5b6987.chunk.js","sourcesContent":["const AppProfile = {\n    profile : {\n        connected: false,\n        isAdmin: false\n    },\n    get: function(key) {\n        return key in this.profile ? this.profile[key] : null;\n    }\n}\n\nexport default AppProfile;","const URL_API = \"https://kf3hmnez3b.execute-api.eu-west-3.amazonaws.com/Orceus\";\n\nexport async function HttpGetRequest(route) {\n    try {\n        let headers = new Headers ({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        });\n\n        const response = await fetch(URL_API + route, {\n            method: \"GET\",\n            headers\n        });\n        return(await response);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function HttpPostRequest(route, body) {\n    try {\n        let headers = new Headers ({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        });\n\n        const response = await fetch(URL_API + route, {\n            method: \"POST\",\n            mode:\"cors\",\n            headers,\n            body: JSON.stringify(body)\n        });\n        return(await response);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function HttpPutRequest(route, body) {\n    try {\n        let headers = new Headers ({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        });\n\n        const response = await fetch(URL_API + route, {\n            method: \"PUT\",\n            headers,\n            body: JSON.stringify(body)\n        });\n        return(await response);\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport async function HttpDeleteRequest(route, body) {\n    try {\n        let headers = new Headers ({\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        });\n\n        const response = await fetch(URL_API + route, {\n            method: \"DELETE\",\n            headers,\n            body: JSON.stringify(body)\n        });\n        return(await response);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React from 'react';\n\nexport default function BackgroundVideo({...props}) {\n    return (\n        <video key={props.vKey} className='background' autoPlay loop muted>\n            <source src={props.source} type='video/mp4' />\n        </video>\n    );\n}","export default __webpack_public_path__ + \"static/media/loginBackground.c0f87895.mp4\";","export default __webpack_public_path__ + \"static/media/successBackground.9fe993ed.mp4\";","export default __webpack_public_path__ + \"static/media/errorBackground.909f594d.mp4\";","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport AppProfile from '../Profile';\n\nimport { HttpPostRequest } from '../HttpRequests';\nimport BackgroundVideo from './BackgroundVideo';\n\nimport \"../assets/css/login.css\";\nimport loginBackground from '../assets/background/loginBackground.mp4';\nimport successBackground from '../assets/background/successBackground.mp4';\nimport errorBackground from '../assets/background/errorBackground.mp4';\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            password: '',\n            error: false,\n            loginState: null,\n            connected: AppProfile.get('connected'),\n        }\n\n        this.handlePassword = this.handlePassword.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        let savePassword = localStorage.getItem('Orceus');\n\n        if (savePassword !== null) {\n            this.handleSubmit(savePassword);\n        }\n    }\n\n    handlePassword(e) {\n        this.setState({password: e.target.value});\n    }\n\n    handleSubmit(pass) {\n\n        let password = !!pass ? pass : this.state.password;\n\n        HttpPostRequest(\"/login\", {\n            password\n        })\n        .then(response => {\n            console.log(0)\n            if (!response.ok) {\n                throw Error();\n            }\n            return response.json()\n        })\n        .then(data => {\n            this.setState({ loginState: \"success\" }, () => {\n                localStorage.setItem('Orceus', password);\n                AppProfile.profile = {\n                    connected: data.connected,\n                    isAdmin: data.is_admin,\n                }\n                setTimeout(() => {\n                    this.setState({\n                        connected: true,\n                        loginState: null,\n                    })\n                    if (!this.props.location.state) {\n                        this.props.history.push('/Orceus/cards');\n                    } else {\n                        this.props.history.push(this.props.location.state.referrer);\n                    }\n                }, 1500);\n            })\n        })\n        .catch(() => {\n            this.setState({ error: true, loginState: \"error\" }, () => {\n                localStorage.removeItem('Orceus');\n                setTimeout(()=> {\n                    this.setState({\n                        error: false,\n                        loginState: null\n                    });\n                }, 1666);\n            });\n        })\n\n    }\n\n    render() {\n        let isMobile = window.innerWidth <= 600;\n        let inputClass = ['div-centered'];\n\n        if (!!this.state.loginState) {\n            inputClass.push('d-none')\n        }\n\n        return (\n            <div className=\"login-container\">\n                { (this.state.loginState === null && !isMobile) ? (\n                        <BackgroundVideo\n                        source={loginBackground}\n                        vKey={\"login\"}\n                        />\n                ) : null}\n                { (this.state.loginState === \"success\" && !isMobile) ? (\n                        <BackgroundVideo\n                        source={successBackground}\n                        vKey={\"login-success\"}\n                        />\n                ) : null}\n                { (this.state.loginState === \"error\" && !isMobile) ? (\n                        <BackgroundVideo\n                        source={errorBackground}\n                        vKey={\"login-success\"}\n                        />\n                ) : null}\n                <div className={inputClass.join(' ')}>\n                    <TextField\n                        onChange={this.handlePassword}\n                        value={this.state.password}\n                        placeholder=\"Mot de passe\"\n                        style={{marginRight: \"15px\"}}\n                        />\n                    <Button\n                        variant=\"contained\"\n                        onClick={() => { this.handleSubmit() }}\n                        >\n                        Enter\n                    </Button><br/>\n                    <span className={this.state.error ? \"error\" : \"hide-error\"}>\n                        mauvais mot de passe\n                    </span>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport {  \n    ArrowBack,\n    ZoomIn,\n    ZoomOut,\n    ZoomOutMap,\n} from '@material-ui/icons';\n\nimport \"../assets/css/card.css\";\nimport { Link } from 'react-router-dom';\n\nimport { HttpGetRequest } from '../HttpRequests';\n\nexport default class CardMenu extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            card: '',\n        }\n\n        this.getCard = this.getCard.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCard();\n    }\n\n    getCard() {\n        if (!this.props.id)\n            return;\n        let url = \"/cards/\" + this.props.id;\n\n        HttpGetRequest(url)\n            .then( response => {\n                if (!response)\n                    throw Error();\n                \n                return response.json();\n            })\n            .then( data => {\n                if (!data)\n                    throw Error();\n\n                this.setState({card: data[0]})\n            })\n            .catch( () => {\n                console.log(\"Erreur lors de l'update\");\n            });\n    }\n\n    render() {\n        return (\n            <div className=\"center\" style={{height: \"100vh\"}}>\n                <TransformWrapper defaultScale={1}>\n                    {({ zoomIn, zoomOut, resetTransform}) => (\n                        <React.Fragment>\n                            <Link\n                                className=\"tool-btn tool-back-arrow\"\n                                to=\"/Orceus/cards\">\n                                <ArrowBack/>\n                            </Link>\n                            <div\n                                className=\"tool-btn tool-zoomin\"\n                                onClick={zoomIn}\n                            >\n                                <ZoomIn/>\n                            </div>\n                            <div\n                                className=\"tool-btn tool-zoomout\"\n                                onClick={zoomOut}\n                            >\n                                <ZoomOut/>\n                            </div>\n                            <div\n                                className=\"tool-btn tool-reset\"\n                                onClick={resetTransform}\n                            >\n                                <ZoomOutMap/>\n                            </div>\n                            <TransformComponent>\n                                <img\n                                    className=\"full-card\"\n                                    src={this.state.card.big_card}\n                                    alt=\" \"\n                                    />\n                            </TransformComponent>\n                        </React.Fragment>\n                    )}\n                </TransformWrapper>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { HttpGetRequest } from '../HttpRequests';\nimport { Settings, Loop } from '@material-ui/icons';\nimport { Button } from '@material-ui/core';\n\nimport AppProfile from '../Profile';\n\nimport '../assets/css/cardMenu.css';\n\nexport default class CardMenu extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            cards: [],\n            loading: true,\n        }\n\n        this.getCardList = this.getCardList.bind(this);\n        this.logout = this.logout.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCardList();\n    }\n\n    getCardList() {\n        HttpGetRequest('/cards')\n        .then(response => {\n            if (!response.ok) {\n                throw Error()\n            }\n            return response.json();\n        })\n        .then(data => {\n            this.setState({\n                cards: data,\n                loading: false,\n            })\n        })\n        .catch(() => {\n            this.setState({loading: false});\n            console.log('Erreur lors de la recupération des datas');\n        })\n    }\n    \n    logout() {\n        AppProfile.profile.connected = false;\n        AppProfile.profile.isAdmin = false;\n\n        localStorage.removeItem('Orceus');\n        this.props.history.push('/Orceus/');\n    }\n\n    render() {\n        let cards = this.state.cards.map( (cardItem, index) => {\n            return(\n                <Link to={\"/Orceus/cards/\" + cardItem.id} key={index}>\n                    <img\n                        className=\"card-img\"\n                        src={cardItem.card}\n                        alt=\" \"\n                    />\n                </Link>\n            );\n        });\n\n        return (\n            <div className=\"p-1\">\n                <div>\n                    <Button\n                     variant=\"contained\"\n                     color=\"primary\"\n                     onClick={this.logout} >\n                        Déconnexion\n                    </Button>\n                    {(AppProfile.get('isAdmin')) ? (\n                        <Link to=\"/Orceus/AdminSettings\" className=\"setting-btn\">\n                           <Settings style={{color: 'white'}} className='clickable'/>\n                        </Link>\n                    ) : null}\n                </div>\n                <div className=\"container-card-menu\">\n                    {cards}\n                    {(cards.length === 0 && !this.state.loading) ? (\n                        <div style={{color: 'white'}}>Aucune donnée</div>\n                    ) : null}\n                    {(this.state.loading) ? (\n                        <div className=\"rotate\">\n                            <Loop className=\"loading\"/>\n                        </div>\n                    ) : null}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { \n    Route,\n    Switch,\n    useRouteMatch,\n    useParams\n} from 'react-router-dom';\n\nimport Card from './Card';\nimport CardsMenu from './CardsMenu';\n\nexport default function Cards({ history }) {\n    let match = useRouteMatch();\n\n    return (\n        <Switch>\n            <Route path={`${match.path}/:id`}>\n                <GetIDToCard history={history}/>\n            </Route>\n            <Route path={match.path}>\n                <CardsMenu history={history}/>\n            </Route>\n        </Switch>\n    )\n}\n\nfunction GetIDToCard () {\n    let { id } = useParams();\n\n    return (\n        <Card id={id}/>\n    );\n}\n","import React from 'react';\nimport { Close, Delete, AddCircleOutline } from '@material-ui/icons';\nimport { Button } from '@material-ui/core';\nimport Select from 'react-select';\n\nimport { HttpGetRequest, HttpPostRequest } from '../HttpRequests';\n\nimport '../assets/css/adminModale.css';\n\nconst TYPESOPTIONS = [{\n    label: 'Personnage',\n    value: 'character'\n}, {\n    label: 'Carte',\n    value: 'map'\n}, {\n    label: 'Peuple/Race',\n    value: 'class'\n}, {\n    label: 'Mineral',\n    value: 'mineral'\n}, {\n    label: 'Végétal',\n    value: 'vegetable'\n}, {\n    label: 'Ville',\n    value: 'city'\n}, {\n    label: 'Créature',\n    value: 'monster'\n}, {\n    label: 'Artefact',\n    value: 'artefact'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\nconst SPECIESOPTIONS = [{\n    label: 'Inconnue',\n    value: 'Unknown'\n}, {\n    label: 'Ciheuphe',\n    value: 'ciheuphe'\n}, {\n    label: 'Humain',\n    value: 'human'\n}, {\n    label: 'Shashouille',\n    value: 'shashouille'\n}, {\n    label: 'Robot',\n    value: 'robot'\n}, {\n    label: 'Hanylice',\n    value: 'hanylice'\n}, {\n    label: 'Suhera',\n    value: 'suhera'\n}, {\n    label: 'Ao-Nesa',\n    value: 'ao-nesa'\n}, {\n    label: 'Biri-Ozi',\n    value: 'biri-ozi'\n}, {\n    label: 'Wibsa-Thu',\n    value: 'wibsa-thu'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\nconst THEMESELECT = {\n    placeholder: (provided) => ({\n        ...provided,\n        color: 'white'\n    }),\n    singleValue: (provided) => ({\n        ...provided,\n        color: 'white'\n    }),\n    menu: (provided) => ({\n      ...provided,\n      color: 'white',\n      backgroundColor: 'black',\n    }),\n    control: (provided) => ({\n        ...provided,\n        color: 'white',\n        background: 'black',\n        backgroundColor: 'black',\n    }),\n    option: (provided) => ({\n        ...provided,\n        backgroundColor: 'black',\n        \"&:hover\": {\n            backgroundColor: 'rgb(131, 131, 131)'\n        }\n    })\n}\n\nexport default class AdminModale extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            closing: false,\n            card: {\n                name: '',\n                desc: '',\n                type: null,\n                specie: null,\n                card: null,\n                big_card: null,\n                tags: [],\n            },\n            loading: false,\n        }\n\n        this.getCard = this.getCard.bind(this);\n        this.close = this.close.bind(this);\n        this.changeText = this.changeText.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.handleTags = this.handleTags.bind(this);\n        this.removeTag = this.removeTag.bind(this);\n        this.addTag = this.addTag.bind(this);\n        this.handleImg = this.handleImg.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCard();\n    }\n\n    getCard() {\n        if (!this.props.id)\n            return;\n        let url = \"/cards/\" + this.props.id;\n\n        HttpGetRequest(url)\n            .then( response => {\n                if (!response)\n                    throw Error();\n                \n                return response.json();\n            })\n            .then( data => {\n                if (!data)\n                    throw Error();\n\n                this.setState({card: data[0]})\n            })\n            .catch( () => {\n                console.log(\"Erreur lors de l'update\");\n            });\n    }\n\n    close() {\n        this.setState({\n            closing: true,\n        }, () => {\n            setTimeout(() =>{\n                this.setState({\n                    closing: false\n                }, () => {\n                    this.props.close();\n                })\n            }, 300)\n        })\n    }\n\n    changeText(value, key) {\n        let card = { ...this.state.card };\n\n        card[key] = value;\n\n        this.setState({ card });\n    }\n\n    handleSelect(key, option) {\n        let card = { ...this.state.card };\n\n        card[key] = option.value;\n\n        this.setState({ card });\n    }\n\n    handleImg(key) {\n        let input = document.getElementById(key);\n\n        input.click();\n        input.addEventListener(\"change\", (e) => {\n            let file = e.target.files[0];\n            let formData = new FormData();\n\n            formData.append('image', file);\n            \n            let url = 'https://api.imgur.com/3/image';\n            let headers= {\n                'Authorization': 'Client-ID af0b96c87fae8bf',\n            };\n\n            this.setState({\n                loading: true\n            }, () => {\n                fetch(url, {\n                    mode: 'cors',\n                    headers,\n                    method: 'POST',\n                    body: formData,\n                }).then(response => {\n                    if (!response.ok) {\n                        throw Error();\n                    }\n                    return response.json();\n                }).then(data => {\n                    let card = {...this.state.card}\n\n                    if (key === 'card') {\n                        card.card = data.data.link;\n                    } else {\n                        card.big_card = data.data.link;\n                    }\n\n                    this.setState({\n                        card,\n                        loading: false\n                    });\n                }).catch((error) => {\n                    console.log(error);\n                });\n            });\n        });\n    }\n\n    handleTags(index, value) {\n        let card = { ...this.state.card };\n\n        card.tags[index] = value;\n\n        this.setState({ card });\n    }\n\n    removeTag(index) {\n        let card = { ...this.state.card };\n\n        card.tags.splice(index, 1);\n\n        this.setState({ card });\n    }\n\n    addTag() {\n        let card = { ...this.state.card };\n\n        card.tags.push('');\n\n        this.setState({ card });\n    }\n\n    getValueFromOptions(options, value) {\n        if (!value) {\n            return null;\n        }\n\n        let optionSelected = null;\n\n        if (options === 'type') {\n            optionSelected = TYPESOPTIONS.filter((type) => (type.value === value));\n        } else {\n            optionSelected = SPECIESOPTIONS.filter((specie) => (specie.value === value));\n        }\n\n        return optionSelected;\n    }\n\n    submit() {\n\n        if (!!this.props.id) {\n            let url = '/card/' + this.props.id;\n\n            HttpPostRequest(url, { ...this.state.card })\n            .then( response => {\n                if (!response)\n                    throw Error();\n                \n                return response.json();\n            })\n            .then( data => {\n                if (!data)\n                    throw Error();\n                this.props.update();\n                this.props.close();\n            })\n            .catch( () => {\n                console.log(\"Erreur lors de l'update\");\n            });\n            return;\n        }\n\n        let url = '/card/';\n\n        HttpPostRequest(url, { ...this.state.card })\n        .then( response => {\n            if (!response)\n                throw Error();\n            \n            return response.json();\n        })\n        .then( data => {\n            if (!data)\n                throw Error();\n            this.props.update();\n            this.props.close()\n        })\n        .catch( () => {\n            console.log(\"Erreur lors de l'ajout\");\n        });\n        return;        \n    }\n\n    render() {\n        let classModale = ['admin-modale-container', 'margin-modale'];\n        let title = 'Création';\n        let submitText = 'Créer'\n        let cardImage = null;\n        let bigCardImage = null;\n        let cardContainerClass = ['input-card', 'p-0'];\n        let bigCardContainerClass = ['input-big-card', 'p-0'];\n        \n        if (this.props.show && !this.state.closing) {\n            classModale.push('show');\n        }\n        if (!!this.props.id) {\n            title = 'Modification';\n            submitText = 'Appliquer';\n        }\n\n        if (!!this.state.card.card) {\n            cardContainerClass.push('bg-transparent');\n            cardImage = this.state.card.card;\n        }\n        if (!!this.state.card.big_card) {\n            bigCardContainerClass.push('bg-transparent');\n            bigCardImage = this.state.card.big_card;\n        }\n\n        return (\n            <div className={classModale.join(' ')}>\n                <div className=\"header-modale pb-2\">\n                    <Close className=\"close-modale-btn\" onClick={this.close}/>\n                    <div className=\"modale-title\">{title} d'une carte</div>\n                </div>\n                <div className=\"body-modale\">\n                    <label className=\"label-modale\">Nom :</label><br/>\n                    <input className=\"input-modale\" \n                     type=\"text\"\n                     value={(this.state.card.name) ? this.state.card.name : ''}\n                     onChange={(e) => this.changeText(e.target.value, 'name')}\n                    />\n                    <label className=\"label-modale\">Description :</label><br/>\n                    <input className=\"input-modale\"\n                     type=\"text\"\n                     value={(this.state.card.desc) ? this.state.card.desc : ''}\n                     onChange={(e) => this.changeText(e.target.value, 'desc')}\n                    />\n\n                    <label className=\"label-modale\">Type :</label><br/>\n                    <Select\n                     className=\"input-modale\"\n                     type=\"text\"\n                     options={TYPESOPTIONS}\n                     value={this.getValueFromOptions('type', this.state.card.type)}\n                     onChange={(e) => {this.handleSelect('type', e)}}\n                     styles={THEMESELECT}\n                    />\n                    { (this.state.card.type === 'character') ? (\n                        <div>\n                            <label className=\"label-modale\">Espèce :</label><br/>\n                            <Select\n                             className=\"input-modale\"\n                             type=\"text\"\n                             options={SPECIESOPTIONS}\n                             value={this.getValueFromOptions('specie', this.state.card.specie)}\n                             onChange={(e) => {this.handleSelect('specie', e)}}\n                             styles={THEMESELECT}\n                            />\n                        </div>\n                    ) : null}\n\n                    <div>\n                        <label className=\"label-modale\">Carte (petite) :</label><br/>\n                        <input\n                         type=\"file\"\n                         id=\"card\"\n                         className=\"d-none\"\n                         alt=\"\"\n                         accept=\".jpg,.png\"\n                        />\n                        <div style={{textAlign: 'center'}}>\n                            <button className={cardContainerClass.join(' ')}\n                             onClick={() => { this.handleImg('card') }}\n                            >\n                                <img className=\"input-image\"\n                                 src={cardImage}\n                                 alt=\"\"\n                                />\n                            </button>\n                        </div>\n                    </div>\n\n                    <div>\n                        <label className=\"label-modale\">Fiche (grande) :</label><br/>\n                        <input\n                         type=\"file\"\n                         id=\"big_card\"\n                         className=\"d-none\"\n                         alt=\"\"\n                         accept=\".jpg,.png\"\n                        />\n                        <div style={{textAlign: 'center'}}>\n                            <button className={bigCardContainerClass.join(' ')}\n                             onClick={() => { this.handleImg('big_card') }}\n                            >\n                                <img className=\"input-image\"\n                                 src={bigCardImage}\n                                 alt=\"\"\n                                />\n                            </button>\n                        </div>\n                    </div>\n\n                    <label className=\"label-modale\">Tags :</label>\n                    <AddCircleOutline className=\"add-tag\" onClick={this.addTag}/><br/>\n                    {this.state.card.tags.map( (tag, index) => (\n                        <div className=\"tag-container\" key={'tag' + index}>\n                            <input\n                             type=\"text\"\n                             className=\"input-tag\"\n                             value={tag}\n                             onChange={(e) => {\n                                this.handleTags(index, e.target.value);\n                             }}\n                            />\n                            <Delete className=\"delete-tag\" onClick={() => this.removeTag(index)}/>\n                        </div>\n                    ))}\n                </div>\n                <div className=\"footer-modale pt-2\">\n                    <Button\n                        className=\"submit-btn\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={this.submit}\n                        disabled={this.state.loading}>\n                        {submitText}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { HttpGetRequest, HttpDeleteRequest } from '../HttpRequests';\nimport { Delete, Create, ArrowBackIos, AddCircleOutline } from '@material-ui/icons';\nimport { Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\n\nimport AdminModale from './AdminModale';\n\nimport '../assets/css/adminSettings.css'\n\nconst TYPESOPTIONS = [{\n    label: 'Personnage',\n    value: 'character'\n}, {\n    label: 'Carte',\n    value: 'map'\n}, {\n    label: 'Peuple/Race',\n    value: 'class'\n}, {\n    label: 'Mineral',\n    value: 'mineral'\n}, {\n    label: 'Végétal',\n    value: 'vegetable'\n}, {\n    label: 'Ville',\n    value: 'city'\n}, {\n    label: 'Créature',\n    value: 'monster'\n}, {\n    label: 'Artefact',\n    value: 'artefact'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\nconst SPECIESOPTIONS = [{\n    label: 'Inconnue',\n    value: 'Unknown'\n}, {\n    label: 'Ciheuphe',\n    value: 'ciheuphe'\n}, {\n    label: 'Humain',\n    value: 'human'\n}, {\n    label: 'Shashouille',\n    value: 'shashouille'\n}, {\n    label: 'Robot',\n    value: 'robot'\n}, {\n    label: 'Hanylice',\n    value: 'hanylice'\n}, {\n    label: 'Suhera',\n    value: 'suhera'\n}, {\n    label: 'Ao-Nesa',\n    value: 'ao-nesa'\n}, {\n    label: 'Biri-Ozi',\n    value: 'biri-ozi'\n}, {\n    label: 'Wibsa-Thu',\n    value: 'wibsa-thu'\n}, {\n    label: 'Autre',\n    value: 'other'\n}];\n\n\nexport default class AdminSettings extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            cards: [],\n            selectedCard: null,\n            openModal: false,\n        }\n\n        this.getCardList = this.getCardList.bind(this);\n        this.closeModal = this.closeModal.bind(this);\n    }\n\n    componentDidMount() {\n        this.getCardList();\n    }\n\n    getCardList() {\n        HttpGetRequest('/cards')\n        .then(data => {\n            if (!data) {\n                throw Error()\n            }\n            return data.json();\n        })\n        .then(data => {\n            this.setState({\n                cards: data\n            })\n        })\n        .catch(() => {\n            console.log('Erreur lors de la recupération des datas');\n        })\n    }\n\n    closeModal() {\n        this.setState({\n            openModal: false,\n            selectedCard: null,\n        })\n    }\n\n    configureCard(id) {\n        this.setState({\n            selectedCard: id,\n            openModal: true \n        })\n    }\n\n    deleteCard(id) {\n        HttpDeleteRequest('/card/' + id)\n        .then(response => {\n            if (!response.ok) {\n                throw Error()\n            }\n            return response.json();\n        })\n        .then(data => {\n            this.getCardList();\n        })\n        .catch(() => {\n            console.log('Erreur lors de la suppression');\n        })\n    }\n\n    render() {\n        const columns = [{\n            headerName: 'Name',\n            field: 'name',\n            width: 150,\n        }, {\n            headerName: 'Desc',\n            field: 'desc',\n            width: 200,\n        }, {\n            headerName: 'Type',\n            field: 'type',\n            width: 150,\n            renderCell: (params) => {\n                let value = params.value;\n                let obj = TYPESOPTIONS.filter( type => (type.value === value));\n\n                return (\n                    <span>{(obj.lenth !== 0) ? obj[0].label : null}</span>\n                );\n            }\n        }, {\n            headerName: 'Espèce',\n            field: 'specie',\n            width: 150,\n            renderCell: (params) => {\n                let value = params.value;\n                let obj = SPECIESOPTIONS.filter( species => (species.value === value));\n\n                return (\n                    <span>{(obj.lenth !== 0) ? obj[0].label : null}</span>\n                );\n            }\n        }, {\n            headerName: 'Tags',\n            field: 'tags',\n            flex: 1,\n        },{\n            headerName: 'Actions',\n            sortable: false,\n            field: 'actions',\n            width: 150,\n            renderCell: (params) => (\n                <div>\n                    <Create className=\"action-btn\"\n                     onClick={()=> this.configureCard(params.row.id)}\n                    />\n                    <Delete className=\"action-btn\"\n                     onClick={()=> this.deleteCard(params.row.id)}\n                    />\n                </div>\n            ),\n          }];\n\n        return (\n            <div className='adminsetting-container'>\n                <div className=\"d-flex row pb-2\">\n                    <Link to=\"/Orceus/cards/\" style={{ color: 'white' }}>\n                        <ArrowBackIos />\n                    </Link>                        \n                    <Button\n                     className=\"right\"\n                     variant=\"contained\"\n                     color=\"primary\"\n                     startIcon = {<AddCircleOutline />}\n                     onClick={() => { this.configureCard(null) }}>\n                        Nouveau\n                    </Button>\n                </div>\n                <div>\n                    <DataGrid \n                     rows={this.state.cards}\n                     columns={columns}\n                     pageSize={10}\n                     autoHeight\n                     />\n                    { (this.state.openModal) ? (\n                        <AdminModale\n                         show={this.state.openModal}\n                         update={this.getCardList}\n                         close={this.closeModal}\n                         id={this.state.selectedCard}\n                        />\n                    ): null}\n                </div>\n            </div>\n        );\n    }\n}","import {\n\tBrowserRouter as Router,\n\tSwitch,\n\tRoute,\n\tuseHistory,\n} from \"react-router-dom\";\n\nimport Login from './components/Login';\nimport Cards from './components/Cards';\nimport AdminSettings from './components/AdminSettings';\nimport AppProfile from './Profile';\nimport './App.css';\n\nfunction PrivateRoute({...props}) {\n\tlet history = useHistory();\n\n\tif (!AppProfile.get('connected')) {\n\t\thistory.push('/Orceus/')\n\t}\n\n\treturn (\n\t\t<Route history={history} path={props.path} component={props.component}/>\n\t);\n}\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<Switch>\n\t\t\t\t\t<PrivateRoute path=\"/Orceus/cards\" component={Cards}/>\n\t\t\t\t\t<PrivateRoute path=\"/Orceus/AdminSettings\" component={AdminSettings}/>\n\t\t\t\t\t<Route exact path=\"/Orceus/\" component={Login}/>\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}